{"version":3,"sources":["/Users/jmh/workspace/demos/chart-builder-prototype/src/$_gendir lazy","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.html","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.scss","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.ts","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.module.ts","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/chartTypes.ts","/Users/jmh/workspace/demos/chart-builder-prototype/src/app/data.ts","/Users/jmh/workspace/demos/chart-builder-prototype/src/environments/environment.ts","/Users/jmh/workspace/demos/chart-builder-prototype/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA,+CAA+C,wDAAwD,EAAE;AACzG;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACNA,kxBAAkxB,eAAe,WAAW,eAAe,8FAA8F,gBAAgB,q8BAAq8B,4QAA4Q,kBAAkB,UAAU,kBAAkB,wQAAwQ,4QAA4Q,kBAAkB,UAAU,kBAAkB,wQAAwQ,4QAA4Q,kBAAkB,UAAU,kBAAkB,kTAAkT,4QAA4Q,kBAAkB,UAAU,kBAAkB,uyaAAuya,wBAAwB,KAAK,KAAK,wG;;;;;;;ACAjuiB;AACA;;;AAGA;AACA,sFAAuF,iBAAiB,eAAe,iBAAiB,wBAAwB,mBAAmB,EAAE,UAAU,yFAAyF,wCAAwC,uCAAuC,uCAAuC,sBAAsB,mBAAmB,EAAE,OAAO,2BAA2B,EAAE,WAAW,6BAA6B,8BAA8B,oCAAoC,EAAE,uBAAuB,oBAAoB,EAAE,YAAY,qBAAqB,EAAE,WAAW,wBAAwB,EAAE,4BAA4B,oBAAoB,EAAE,uCAAuC,kBAAkB,EAAE,sCAAsC,sBAAsB,EAAE,4CAA4C,sCAAsC,EAAE,mDAAmD,sBAAsB,EAAE,sCAAsC,qBAAqB,EAAE,mDAAmD,oBAAoB,EAAE,+CAA+C,sBAAsB,EAAE,+CAA+C,oBAAoB,EAAE,0DAA0D,oBAAoB,EAAE,4CAA4C,oBAAoB,EAAE,mDAAmD,sCAAsC,EAAE,mDAAmD,qCAAqC,mBAAmB,EAAE,4DAA4D,oBAAoB,EAAE,wCAAwC,uDAAuD,EAAE,4CAA4C,kBAAkB,EAAE,6CAA6C,6BAA6B,EAAE,kEAAkE,6BAA6B,EAAE,6CAA6C,qBAAqB,EAAE,gCAAgC,qBAAqB,EAAE,qDAAqD,+BAA+B,EAAE,2CAA2C,uBAAuB,qBAAqB,EAAE,wCAAwC,8BAA8B,mBAAmB,oBAAoB,uBAAuB,wBAAwB,mBAAmB,qBAAqB,EAAE,yBAAyB,oBAAoB,kBAAkB,kBAAkB,0BAA0B,yBAAyB,gBAAgB,cAAc,EAAE,oBAAoB,uBAAuB,uBAAuB,sBAAsB,EAAE,oBAAoB,gBAAgB,sBAAsB,EAAE,uBAAuB,uBAAuB,uBAAuB,EAAE,iBAAiB,iBAAiB,EAAE,kBAAkB,uBAAuB,gBAAgB,0BAA0B,oBAAoB,cAAc,EAAE,qBAAqB,kBAAkB,yBAAyB,EAAE;;AAElmG;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXqE;AACK;AACxC;AAEG;AACE;AACP;AACD;AAEW;AACP;AAEnC,IAAM,cAAc,GAAG;IACrB,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;IACjB,WAAW,EAAE,gGAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,MAAM,EAAjB,CAAiB,CAAC;IACnD,UAAU,EAAE,SAAS;IACrB,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,QAAQ;IACrB,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,IAAI;IACpB,cAAc,EAAE,IAAI;IACpB,UAAU,EAAE,EAAE;IACd,UAAU,EAAE,EAAE;IACd,SAAS,EAAE,IAAI;IACf,aAAa,EAAE,IAAI;IACnB,gBAAgB,EAAE,GAAG;IACrB,YAAY,EAAE,KAAK;IACnB,eAAe,EAAE,KAAK;IACtB,iBAAiB,EAAE,IAAI;IACvB,KAAK,EAAE,qDAAiB;IACxB,WAAW,EAAE,6DAAyB;CACvC,CAAC;AAEF,IAAO,MAAM,GAAG;IACd,OAAO,EAAE,oDAAgB;IACzB,cAAc,EAAE,0DAAsB;IACtC,QAAQ,EAAE,qDAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;IACnC,UAAU,EAAE,uDAAmB;IAC/B,iBAAiB,EAAE,6DAAyB;IAC5C,aAAa,EAAE,yDAAqB;IACpC,oBAAoB,EAAE,+DAA2B;IACjD,QAAQ,EAAE,qDAAiB;IAC3B,eAAe,EAAE,2DAAuB;IACxC,YAAY,EAAE,wDAAoB;IAClC,YAAY,EAAE,wDAAoB;IAClC,SAAS,EAAE,sDAAkB;IAC7B,MAAM,EAAE,mDAAe;IACvB,YAAY,EAAE,wDAAoB;IAClC,aAAa,EAAE,yDAAqB;IACpC,SAAS,EAAE,qDAAiB;CAC7B,CAAC;AASF;IANA;QAOE,eAAU,GAAG,+DAAU,CAAC;QA0CxB,iBAAY,GAAG;YACb,WAAW,EAAE,IAAI;YACjB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;aACb;SACF,CAAC;QAEF,aAAQ,GAAG,IAAI,gDAAQ,EAAE,CAAC;IA6H5B,CAAC;IA1JC,sBAAI,kCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC;QAC/B,CAAC;aAED,UAAa,KAAK;YAChB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzB,CAAC;;;OAJA;IAMD,sBAAI,sCAAY;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAED,sBAAI,0CAAgB;aAApB;YACE,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACpE,CAAC;;;OAAA;IAED,sBAAI,4CAAkB;aAAtB;YAAA,iBAGC;YAFC,MAAM,CAAC,IAAI,CAAC,gBAAgB;gBAC1B,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,EAA7B,CAA6B,CAAC,CAAC;QAC5E,CAAC;;;OAAA;IAYD,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,iCAAU,GAAV;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,wDAAS,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,+DAAU,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,EAAzB,CAAyB,CAAC,CAAC;IACnE,CAAC;IAED,4BAAK,GAAL;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,iFAAiF,CAAC;QAChG,IAAI,CAAC,WAAW,GAAG,wCAAwC,CAAC;QAC5D,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,YAAY,gBAAO,cAAc,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAClC,CAAC;IAED,kCAAW,GAAX;QAAA,iBA8BC;QA7BC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;QACT,CAAC;QACD,IAAM,IAAI,GAAG,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC;QACtC,IAAM,KAAK,GAAG,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC;QACvC,IAAM,MAAM,GAAG,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC;QACxC,IAAM,OAAO,GAAG,WAAC,IAAI,QAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAnB,CAAmB,CAAC;QAEzC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,mEAAI,EAAE;aACtB,GAAG,CAAC,IAAI,CAAC;aACT,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;aACrB,GAAG,CAAC,MAAM,CAAC,CAAC;QAEf,gBAAgB,CAAC;YACf,MAAM,CAAC;gBACL,IAAI,EAAE,CAAC,CAAC,GAAG;gBACX,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC;aACnC,CAAC;QACJ,CAAC;QAED,sBAAsB,CAAC;YACrB,MAAM,CAAC;gBACL,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;gBACd,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;gBAChB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;gBACX,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;gBACZ,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;aACd,CAAC;QACJ,CAAC;IACH,CAAC;IAED,iCAAU,GAAV,UAAW,KAAsB;QAC/B;;YAEI;QAHK,gCAAQ,IAAI,CAAC,SAAS;QAK/B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAM,MAAM,GAAG,gDAAe,CAAC,IAAI,CAAC,SAAS,EAAE;YAC7C,MAAM,EAAE,IAAI;YACZ,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;QAE5B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;QAE3B,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC;YAChD,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B,CAAC,EAH+C,CAG/C,CAAC,CAAC;QAEJ,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACjB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,wCAAiB,GAAjB;QACE,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC1F,IAAI,CAAC,YAAY,CAAC,WAAW,gBAAO,IAAI,CAAC,YAAY,CAAC,WAAW,IAAE,MAAM,WAAC,CAAC;IAC7E,CAAC;IAED,2CAAoB,GAApB;QACE,IAAM,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACnE,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAoB,GAApB;QACE,IAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3F,IAAM,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1G,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,OAAO,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC;QAED,IAAM,EAAE,GAAG,iDAAM,CAAC,KAAK,CAAK,OAAO,QAAK,OAAO,EAAE,CAAC;QAClD,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IA/KU,YAAY;QANxB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0EAAmC;YACnC,iJAA4F;YAC5F,aAAa,EAAE,gEAAiB,CAAC,IAAI;SACtC,CAAC;OACW,YAAY,CAgLxB;IAAD,mBAAC;CAAA;AAhLwB;AAkLzB,eAAe,CAAS;IACtB,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5E,CAAC;AAED,uBAAuB,MAAc,EAAE,MAAe,EAAE,SAAkB;IACxE,IAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,IAAM,KAAK,GAAG,MAAM,GAAG,iDAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,iDAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAClG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;AACvD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACvPyD;AACqB;AACtC;AAEM;AAC/C,yDAAyD;AACF;AAER;AAgB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,wEAAa;gBACb,qGAAuB;gBACvB,6DAAW;gBACX,gBAAgB;gBAChB,qEAAe;aAChB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBtB,yBAAyB,EAAe;IAAd,oBAAK,EAAE,2BAAM;IACrC,MAAM,YACJ,KAAK,SACL,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,EACxB,SAAS,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,IAC3C,GAAG,EACN;IAEF,qBAAqB,CAAS;QAC5B,MAAM,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;AACH,CAAC;AAEM,IAAM,UAAU,GAAG;IACxB,eAAe,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC;IAC7C,eAAe,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAE,CAAC;IAC/C,eAAe,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC;IAClD,eAAe,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC;IACrD,eAAe,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,CAAC;IACvD,eAAe,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,CAAC,UAAU,EAAE,cAAc,EAAE,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC;IACzG,eAAe,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC;IAC/F,eAAe,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;IAC9F,eAAe,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC;CACrG,CAAC;;;;;;;;;;ACvBK,IAAM,SAAS,GAAG,+6MAyHgC,CAAC,IAAI,EAAE,CAAC;;;;;;;;;ACzHjE;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qEAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<h1>ngx-chart builder\\n  <small class=\\\"pull-right\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"clearAll()\\\">Reset</button>\\n    <a href=\\\"https://github.com/swimlane/ngx-charts-builder\\\" class=\\\"btn btn-default\\\">Github</a>\\n  </small>\\n</h1>\\n\\n<div class=\\\"main\\\">\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Your Data\\\">\\n    <span>\\n      Copy and paste your tabular (TSV, CSV) data here.\\n      <button class=\\\"btn btn-link\\\" (click)=\\\"useExample()\\\">(Use example data)</button>\\n    </span>\\n    <ngx-codemirror\\n      [(ngModel)]=\\\"dataText\\\"\\n      [config]=\\\"editorConfig\\\">\\n    </ngx-codemirror>\\n    <p *ngIf=\\\"dataText.length > 1\\\">\\n      <span *ngFor=\\\"let error of errors\\\" class=\\\"text-red\\\">\\n        <span *ngIf=\\\"error.row\\\">Row {{error.row + 2}}: </span>{{error.message}} <br />\\n      </span>\\n      <span *ngIf=\\\"!errors.length\\\" class=\\\"text-green\\\">\\n        {{rawData.length}} records have been successfully parsed!\\n      </span>\\n    </p>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Select your Chart\\\"\\n    [sectionCollapsible]=\\\"hasValidData\\\"\\n    [sectionCollapsed]=\\\"!hasValidData\\\">\\n    <ngx-select [filterable]=\\\"false\\\" label=\\\"Chart Type\\\" [ngModel]=\\\"[chartType]\\\" (change)=\\\"chartType = $event[0]\\\">\\n      <ngx-select-option *ngFor=\\\"let chart of chartTypes\\\" [name]=\\\"chart.title\\\" [value]=\\\"chart\\\">\\n      </ngx-select-option>\\n    </ngx-select>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Map your Dimensions\\\"\\n    [sectionCollapsible]=\\\"hasChartSelected\\\"\\n    [sectionCollapsed]=\\\"!hasChartSelected\\\">\\n    <div *ngIf=\\\"hasChartSelected\\\">\\n      <ngx-select\\n        *ngIf=\\\"chartType && hasValidData\\\"\\n        [filterable]=\\\"false\\\"\\n        [label]=\\\"chartType.dimLabels[0]\\\"\\n        [ngModel]=\\\"[dataDims[0]]\\\"\\n        (change)=\\\"dataDims[0] = $event[0]; processData()\\\">\\n        <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n          [name]=\\\"field\\\"\\n          [value]=\\\"field.name\\\">\\n          <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n            {{option.name.name}} <small>{{option.name.type}}</small>\\n          </ng-template>\\n        </ngx-select-option>\\n      </ngx-select>\\n\\n      <ngx-select\\n        [filterable]=\\\"false\\\"\\n        [label]=\\\"chartType.dimLabels[1]\\\"\\n        [ngModel]=\\\"[dataDims[1]]\\\"\\n        (change)=\\\"dataDims[1] = $event[0]; processData()\\\">\\n        <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n          [name]=\\\"field\\\"\\n          [value]=\\\"field.name\\\">\\n          <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n            {{option.name.name}} <small>{{option.name.type}}</small>\\n          </ng-template>\\n        </ngx-select-option>\\n      </ngx-select>\\n\\n      <ngx-select\\n        [filterable]=\\\"false\\\"\\n        [label]=\\\"chartType.dimLabels[2]\\\"\\n        [ngModel]=\\\"[dataDims[2]]\\\"\\n        (change)=\\\"dataDims[2] = $event[0]; processData()\\\">\\n        <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n          [name]=\\\"field\\\"\\n          [value]=\\\"field.name\\\">\\n          <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n            {{option.name.name}} <small>{{option.name.type}}</small>\\n          </ng-template>\\n        </ngx-select-option>\\n      </ngx-select>\\n\\n      <ngx-select\\n        *ngIf=\\\"chartType.dimLabels[3]\\\"\\n        [filterable]=\\\"false\\\"\\n        [label]=\\\"chartType.dimLabels[3]\\\"\\n        [ngModel]=\\\"[dataDims[3]]\\\"\\n        (change)=\\\"dataDims[3] = $event[0]; processData()\\\">\\n        <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n          [name]=\\\"field\\\"\\n          [value]=\\\"field.name\\\">\\n          <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n            {{option.name.name}} <small>{{option.name.type}}</small>\\n          </ng-template>\\n        </ngx-select-option>\\n      </ngx-select>\\n    </div>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow\\\" [class]=\\\"theme\\\" sectionTitle=\\\"Your Visualization\\\"\\n    [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n    [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n    <div *ngIf=\\\"hasValidDimensions\\\" class=\\\"viz-container\\\">\\n      <ngx-charts-bar-vertical-2d\\n        *ngIf=\\\"chartType.name === 'bar-vertical-2d'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        xxxbarPadding=\\\"chartOptions.barPadding\\\"\\n        xxxgroupPadding=\\\"chartOptions.groupPadding\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-2d>\\n      <ngx-charts-bar-horizontal-2d\\n        *ngIf=\\\"chartType.name === 'bar-horizontal-2d'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-2d>\\n      <ngx-charts-bar-vertical-stacked\\n        *ngIf=\\\"chartType.name === 'bar-vertical-stacked'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-stacked>\\n      <ngx-charts-bar-horizontal-stacked\\n        *ngIf=\\\"chartType.name === 'bar-horizontal-stacked'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-stacked>\\n      <ngx-charts-bar-vertical-normalized\\n        *ngIf=\\\"chartType.name === 'bar-vertical-normalized'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-normalized>\\n      <ngx-charts-bar-horizontal-normalized\\n        *ngIf=\\\"chartType.name === 'bar-horizontal-normalized'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-normalized>\\n      <ngx-charts-polar-chart\\n        *ngIf=\\\"chartType.name === 'polar-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [rangeFillOpacity]=\\\"chartOptions.rangeFillOpacity\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [curve]=\\\"chartOptions.curveClosed\\\"\\n        [showSeriesOnHover]=\\\"chartOptions.showSeriesOnHover\\\">\\n      </ngx-charts-polar-chart>\\n      <ngx-charts-line-chart\\n        *ngIf=\\\"chartType.name === 'line-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [curve]=\\\"chartOptions.curve\\\"\\n        [rangeFillOpacity]=\\\"chartOptions.rangeFillOpacity\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [showSeriesOnHover]=\\\"chartOptions.showSeriesOnHover\\\">\\n      </ngx-charts-line-chart>\\n      <ngx-charts-heat-map\\n        *ngIf=\\\"chartType.name === 'heat-map'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        xxxinnerPadding=\\\"chartOptions.innerPadding\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\">\\n      </ngx-charts-heat-map>\\n      <ngx-charts-bubble-chart\\n        *ngIf=\\\"chartType.name === 'bubble-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [results]=\\\"data\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [minRadius]=\\\"3\\\"\\n        [maxRadius]=\\\"20\\\">\\n      </ngx-charts-bubble-chart>\\n    </div>\\n    Download: \\n    <ngx-button (click)=\\\"svgSaver.asSvg()\\\">SVG</ngx-button>\\n    <ngx-button (click)=\\\"svgSaver.asPng()\\\">PNG</ngx-button>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Customize your Visualization\\\"\\n    [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n    [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n    <div *ngIf=\\\"hasValidDimensions\\\">\\n      <ngx-select\\n        [filterable]=\\\"false\\\"\\n        label=\\\"Theme\\\"\\n        [allowClear]=\\\"false\\\"\\n        [ngModel]=\\\"[theme]\\\"\\n        (change)=\\\"theme = $event[0]\\\">\\n        <ngx-select-option *ngFor=\\\"let theme of ['light', 'dark']\\\"\\n          [name]=\\\"theme\\\"\\n          [value]=\\\"theme\\\">\\n        </ngx-select-option>\\n      </ngx-select>\\n  \\n      <ngx-toggle type=\\\"checkbox\\\" [(ngModel)]=\\\"chartOptions.showLegend\\\" label=\\\"Show Legend\\\">\\n      </ngx-toggle>\\n      <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.legendTitle\\\" label=\\\"Legend Title\\\"></ngx-input>\\n      <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.xAxisLabel\\\" label=\\\"X Axis Label\\\"></ngx-input>\\n      <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.yAxisLabel\\\" label=\\\"Y Axis Label\\\"></ngx-input>\\n    </div>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Customize Color Scale\\\"\\n    [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n    [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n\\n    <ng-container *ngIf=\\\"hasValidDimensions\\\">\\n      <ngx-toggle\\n        [(ngModel)]=\\\"diverging\\\"\\n        label=\\\"Diverging\\\"\\n        (change)=\\\"updateColorScheme()\\\">\\n      </ngx-toggle>\\n      <ngx-input\\n        type=\\\"number\\\"\\n        min=\\\"2\\\"\\n        label=\\\"Step count\\\"\\n        [(ngModel)]=\\\"steps\\\"\\n        (change)=\\\"updateColorScheme()\\\"></ngx-input>\\n\\n      <div fxLayout=\\\"row nowrap\\\" fxLayoutGap=\\\"20px\\\">\\n        <div  fxFlex=\\\"1 1 100%\\\">\\n          <ngx-input\\n            class=\\\"colors\\\"\\n            type=\\\"text\\\"\\n            [(ngModel)]=\\\"colors\\\"\\n            (change)=\\\"updateColorScheme()\\\"\\n            label=\\\"Color Scale\\\"\\n            hint=\\\"Enter named colors or hex codes\\\"></ngx-input>\\n          <ngx-checkbox\\n            [(ngModel)]=\\\"bezier\\\"\\n            (change)=\\\"updateColorScheme()\\\">\\n            Bezier interpollation\\n          </ngx-checkbox>\\n          <ngx-checkbox\\n            [(ngModel)]=\\\"lightness\\\"\\n            (change)=\\\"updateColorScheme()\\\">\\n            Lightness correction\\n          </ngx-checkbox>\\n        </div>\\n        <div fxFlex=\\\"1 1 100%\\\" *ngIf=\\\"diverging\\\">\\n          <ngx-input\\n            class=\\\"colors\\\"\\n            type=\\\"text\\\"\\n            [(ngModel)]=\\\"colorsRight\\\"\\n            (change)=\\\"updateColorScheme()\\\"\\n            label=\\\"Color Scale Right\\\"\\n            hint=\\\"Enter named colors or hex codes\\\"></ngx-input>\\n          <ngx-checkbox\\n            [(ngModel)]=\\\"bezierRight\\\"\\n            (change)=\\\"updateColorScheme()\\\">\\n            Bezier interpollation\\n          </ngx-checkbox>\\n          <ngx-checkbox\\n            [(ngModel)]=\\\"lightnessRight\\\"\\n            (change)=\\\"updateColorScheme()\\\">\\n            Lightness correction\\n          </ngx-checkbox>\\n        </div>\\n        <div fxFlex=\\\"0 0 200px\\\">\\n          <ul class=\\\"color-scale pull-right\\\">\\n            <li *ngFor=\\\"let hex of chartOptions.colorScheme.domain\\\" [ngStyle]=\\\"{'background-color': hex}\\\">{{hex}}</li>\\n          </ul>\\n        </div>\\n      </div>\\n    </ng-container>\\n\\n  </ngx-section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n  * Backgrounds\\n  */\\n/**\\n  * Text\\n  */\\nhtml, body {\\n  margin: 10px;\\n  padding: 0;\\n  height: 100%;\\n  background: #1b1e27;\\n  color: #a8b2c7; }\\n\\nbody {\\n  font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue, Helvetica, Arial', sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-rendering: optimizeLegibility;\\n  min-height: 100vh;\\n  color: #a8b2c7; }\\n\\n* {\\n  box-sizing: border-box; }\\n\\n.main {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n  .main .CodeMirror {\\n    height: 250px; }\\n\\n.light {\\n  background: #fff; }\\n\\n.dark {\\n  background: #1b1e27; }\\n  .dark .ngx-charts text {\\n    fill: #a8b2c7; }\\n  .dark .ngx-charts .tooltip-anchor {\\n    fill: white; }\\n  .dark .ngx-charts .gridline-path {\\n    stroke: #2f3646; }\\n  .dark .ngx-charts .grid-panel.odd rect {\\n    fill: rgba(255, 255, 255, 0.05); }\\n  .dark .ngx-charts .force-directed-graph .edge {\\n    stroke: #455066; }\\n  .dark .ngx-charts .number-card p {\\n    color: #f0f1f6; }\\n  .dark .ngx-charts .gauge .background-arc path {\\n    fill: #2f3646; }\\n  .dark .ngx-charts .gauge .gauge-tick path {\\n    stroke: #a8b2c7; }\\n  .dark .ngx-charts .gauge .gauge-tick text {\\n    fill: #a8b2c7; }\\n  .dark .ngx-charts .linear-gauge .background-bar path {\\n    fill: #2f3646; }\\n  .dark .ngx-charts .linear-gauge .units {\\n    fill: #72809b; }\\n  .dark .ngx-charts .timeline .brush-background {\\n    fill: rgba(255, 255, 255, 0.05); }\\n  .dark .ngx-charts .timeline .brush .selection {\\n    fill: rgba(255, 255, 255, 0.1);\\n    stroke: #aaa; }\\n  .dark .ngx-charts .polar-chart .polar-chart-background {\\n    fill: #1e222e; }\\n  .dark .chart-legend .legend-labels {\\n    background: rgba(255, 255, 255, 0.05) !important; }\\n  .dark .chart-legend .legend-item:hover {\\n    color: #fff; }\\n  .dark .chart-legend .legend-label:hover {\\n    color: #fff !important; }\\n  .dark .chart-legend .legend-label .active .legend-label-text {\\n    color: #fff !important; }\\n  .dark .chart-legend .scale-legend-label {\\n    color: #a8b2c7; }\\n  .dark .advanced-pie-legend {\\n    color: #a8b2c7; }\\n    .dark .advanced-pie-legend .legend-item:hover {\\n      color: #fff !important; }\\n  .dark .number-card .number-card-label {\\n    font-size: 0.8em;\\n    color: #a8b2c7; }\\n\\n/**\\n * Header\\n */\\n.style-header {\\n  text-transform: uppercase;\\n  color: #72809b;\\n  font-size: 1rem;\\n  position: relative;\\n  padding-bottom: 5px;\\n  margin: 20px 0;\\n  font-weight: 600; }\\n  .style-header:after {\\n    content: \\\"\\\";\\n    width: 25px;\\n    height: 1px;\\n    background: #72809b;\\n    position: absolute;\\n    bottom: 0;\\n    left: 0; }\\n\\n.viz-container {\\n  position: relative;\\n  display: flow-root;\\n  min-height: 600px; }\\n\\nsvg.ngx-charts {\\n  float: left;\\n  overflow: visible; }\\n\\n.ngx-charts-outer {\\n  display: flow-root;\\n  position: relative; }\\n\\n.pull-right {\\n  float: right; }\\n\\n.color-scale {\\n  text-align: center;\\n  width: 100%;\\n  list-style-type: none;\\n  padding-left: 0;\\n  margin: 0; }\\n  .color-scale li {\\n    margin: 3px;\\n    border-radius: 3px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport * as shape from 'd3-shape';\nimport * as dsv from 'd3-dsv';\nimport { nest } from 'd3-collection';\nimport * as babyparse from 'babyparse';\nimport SvgSaver from 'svgsaver';\nimport chroma from 'chroma-js';\n\nimport { chartTypes } from './chartTypes';\nimport { gapminder } from './data';\n\nconst defaultOptions = {\n  view: [1000, 600],\n  colorScheme: colorSets.find(s => s.name === 'cool'),\n  schemeType: 'ordinal',\n  showLegend: true,\n  legendTitle: 'Legend',\n  gradient: false,\n  showXAxis: true,\n  showYAxis: true,\n  showXAxisLabel: true,\n  showYAxisLabel: true,\n  yAxisLabel: '',\n  xAxisLabel: '',\n  autoScale: true,\n  showGridLines: true,\n  rangeFillOpacity: 0.5,\n  roundDomains: false,\n  tooltipDisabled: false,\n  showSeriesOnHover: true,\n  curve: shape.curveLinear,\n  curveClosed: shape.curveCardinalClosed\n};\n\nconst  curves = {\n  'Basis': shape.curveBasis,\n  'Basis Closed': shape.curveBasisClosed,\n  'Bundle': shape.curveBundle.beta(1),\n  'Cardinal': shape.curveCardinal,\n  'Cardinal Closed': shape.curveCardinalClosed,\n  'Catmull Rom': shape.curveCatmullRom,\n  'Catmull Rom Closed': shape.curveCatmullRomClosed,\n  'Linear': shape.curveLinear,\n  'Linear Closed': shape.curveLinearClosed,\n  'Monotone X': shape.curveMonotoneX,\n  'Monotone Y': shape.curveMonotoneY,\n  'Natural': shape.curveNatural,\n  'Step': shape.curveStep,\n  'Step After': shape.curveStepAfter,\n  'Step Before': shape.curveStepBefore,\n  'default': shape.curveLinear\n};\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['../../node_modules/@swimlane/ngx-ui/release/index.css', './app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  chartTypes = chartTypes;\n\n  data: any[];\n  rawData: any[];\n  headerValues: any[];\n  errors: any[];\n  chartType: any;\n  theme: string;\n\n  dataDims: string[];\n  chartOptions: any;\n  colors: string;\n  colorsRight: string;\n  steps: number;\n  bezier: boolean;\n  lightness: boolean;\n  bezierRight: boolean;\n  lightnessRight: boolean;\n  diverging: boolean;\n\n  _dataText: string;\n  get dataText() {\n    return this._dataText || ' ';\n  }\n\n  set dataText(value) {\n    this.updateData(value);\n  }\n\n  get hasValidData() {\n    return this._dataText.length > 0 && this.errors.length === 0;\n  }\n\n  get hasChartSelected() {\n    return this.hasValidData && this.chartType && this.chartType.name;\n  }\n\n  get hasValidDimensions() {\n    return this.hasChartSelected &&\n      !this.chartType.dimLabels.some((l, i) => l ? !this.dataDims[i] : false);\n  }\n\n  editorConfig = {\n    lineNumbers: true,\n    theme: 'dracula',\n    mode: {\n      name: 'json'\n    }\n  };\n\n  svgSaver = new SvgSaver();\n\n  ngOnInit() {\n    this.clearAll();\n  }\n\n  useExample() {\n    this.clear();\n    this.dataText = gapminder;\n    this.updateData();\n    this.chartType = chartTypes[0];\n    this.dataDims = [5, 0, 3, 3].map(i => this.headerValues[i].name);\n  }\n\n  clear() {\n    this.headerValues = [];\n    this.rawData = [];\n    this.dataDims = [null, null, null, null];\n    return this.data = [];\n  }\n\n  clearAll() {\n    this.clear();\n    this.dataText = '';\n    this.chartType = null;\n    this.theme = 'light';\n    this.colors = '#a8385d,#7aa3e5,#a27ea8,#aae3f5,#adcded,#a95963,#8796c0,#7ed3ed,#50abcc,#ad6886';\n    this.colorsRight = 'darkred, deeppink, orange, lightyellow';\n    this.steps = 10;\n    this.bezier = false;\n    this.lightness = false;\n    this.bezierRight = false;\n    this.lightnessRight = false;\n    this.bezier = false;\n    this.lightness = false;\n    this.chartOptions = {...defaultOptions};\n    return this.updateColorScheme();\n  }\n\n  processData() {\n    if (!this.hasValidDimensions) {\n      return;\n    }\n    const key$ = d => d[this.dataDims[0]];\n    const name$ = d => d[this.dataDims[1]];\n    const value$ = d => d[this.dataDims[2]];\n    const value2$ = d => d[this.dataDims[3]];\n\n    return this.data = nest()\n      .key(key$)\n      .entries(this.rawData)\n      .map(series);\n\n    function series(d) {\n      return {\n        name: d.key,\n        series: d.values.map(seriesPoints)\n      };\n    }\n\n    function seriesPoints(d) {\n      return {\n        name: name$(d),\n        value: value$(d),\n        x: name$(d),\n        y: value$(d),\n        r: value2$(d)\n      };\n    }\n  }\n\n  updateData(value = this._dataText) {\n    /* if (this._dataText === value) {\n      return this.clear();\n    } */\n\n    this._dataText = value;\n    const parsed = babyparse.parse(this._dataText, {\n      header: true,\n      dynamicTyping: true\n    });\n\n    this.errors = parsed.errors;\n\n    if (this.errors.length) {\n      return this.clear();\n    }\n\n    this.rawData = parsed.data;\n\n    const headerValues = parsed.meta.fields.map(d => ({\n      name: d,\n      type: typeof parsed.data[0][d]\n    }));\n\n    if (JSON.stringify(headerValues) !== JSON.stringify(this.headerValues)) {\n      this.headerValues = headerValues.slice();\n      this.dataDims = [null, null, null, null];\n      this.data = [];\n    } else {\n      this.processData();\n    }\n  }\n\n  updateColorScheme() {\n    const domain = this.diverging ? this.updateColorSchemeDiv() : this.updateColorSchemeSeq();\n    this.chartOptions.colorScheme = {...this.chartOptions.colorScheme, domain};\n  }\n\n  updateColorSchemeSeq() {\n    const cs = getColorScale(this.colors, this.bezier, this.lightness);\n    return cs.colors(this.steps);\n  }\n\n  updateColorSchemeDiv() {\n    const domainL = getColorScale(this.colors, this.bezier, this.lightness).colors(this.steps);\n    const domainR = getColorScale(this.colorsRight, this.bezierRight, this.lightnessRight).colors(this.steps);\n\n    if (domainL[domainL.length - 1] === domainR[0]) {\n      domainL.pop();\n    }\n\n    const cs = chroma.scale([...domainL, ...domainR]);\n    return cs.colors(this.steps);\n  }\n}\n\nfunction clean(s: string): string[] {\n  return s.trim().replace(/(, *| +)/g, ',').replace(/['\"]/g, '').split(',');\n}\n\nfunction getColorScale(colors: string, bezier: boolean, lightness: boolean) {\n  const cleanColors = clean(colors);\n  const scale = bezier ? chroma.bezier(cleanColors.slice(0, 5)).scale() : chroma.scale(cleanColors);\n  return scale.mode('lab').correctLightness(lightness);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { NgxUIModule } from '@swimlane/ngx-ui';\n// import { NgxDnDModule } from '@swimlane/ngx-dnd/src/';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxUIModule,\n    // NgxDnDModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/app.module.ts","function createChartType({title, ...obj}) {\n  return {\n    title,\n    name: titleToName(title),\n    dimLabels: ['Group by', 'Name', 'Value', null],\n    ...obj\n  };\n\n  function titleToName(s: string) {\n    return s.toLowerCase().replace(/\\ /g, '-');\n  }\n}\n\nexport const chartTypes = [\n  createChartType({ title: 'Bar Vertical 2D' }),\n  createChartType({ title: 'Bar Horizontal 2D' }),\n  createChartType({ title: 'Bar Vertical Stacked' }),\n  createChartType({ title: 'Bar Vertical Normalized' }),\n  createChartType({ title: 'Bar Horizontal Normalized' }),\n  createChartType({ title: 'Polar Chart', dimLabels: ['Group by', 'Angle Values', 'Radius Values', null] }),\n  createChartType({ title: 'Line Chart', dimLabels: ['Group by', 'x-Values', 'y-Values', null] }),\n  createChartType({ title: 'Heat Map', dimLabels: ['x-Category', 'y-Category', 'Color', null] }),\n  createChartType({ title: 'Bubble Chart', dimLabels: ['GroupBy', 'x-Values', 'y-Values', 'Radius'] })\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/chartTypes.ts","export const gapminder = `\ncountry\tyear\tgdpPercap\tlifeExp\tpop\tcontinent\nAustralia\t1952\t10039.59564\t69.12\t8691212\tOceania\nAustralia\t1957\t10949.64959\t70.33\t9712569\tOceania\nAustralia\t1962\t12217.22686\t70.93\t10794968\tOceania\nAustralia\t1967\t14526.12465\t71.1\t11872264\tOceania\nAustralia\t1972\t16788.62948\t71.93\t13177000\tOceania\nAustralia\t1977\t18334.19751\t73.49\t14074100\tOceania\nAustralia\t1982\t19477.00928\t74.74\t15184200\tOceania\nAustralia\t1987\t21888.88903\t76.32\t16257249\tOceania\nAustralia\t1992\t23424.76683\t77.56\t17481977\tOceania\nAustralia\t1997\t26997.93657\t78.83\t18565243\tOceania\nAustralia\t2002\t30687.75473\t80.37\t19546792\tOceania\nAustralia\t2007\t34435.36744\t81.235\t20434176\tOceania\nCanada\t1952\t11367.16112\t68.75\t14785584\tAmericas\nCanada\t1957\t12489.95006\t69.96\t17010154\tAmericas\nCanada\t1962\t13462.48555\t71.3\t18985849\tAmericas\nCanada\t1967\t16076.58803\t72.13\t20819767\tAmericas\nCanada\t1972\t18970.57086\t72.88\t22284500\tAmericas\nCanada\t1977\t22090.88306\t74.21\t23796400\tAmericas\nCanada\t1982\t22898.79214\t75.76\t25201900\tAmericas\nCanada\t1987\t26626.51503\t76.86\t26549700\tAmericas\nCanada\t1992\t26342.88426\t77.95\t28523502\tAmericas\nCanada\t1997\t28954.92589\t78.61\t30305843\tAmericas\nCanada\t2002\t33328.96507\t79.77\t31902268\tAmericas\nCanada\t2007\t36319.23501\t80.653\t33390141\tAmericas\nChina\t1952\t400.4486107\t44\t556263528\tAsia\nChina\t1957\t575.9870009\t50.54896\t637408000\tAsia\nChina\t1962\t487.6740183\t44.50136\t665770000\tAsia\nChina\t1967\t612.7056934\t58.38112\t754550000\tAsia\nChina\t1972\t676.9000921\t63.11888\t862030000\tAsia\nChina\t1977\t741.2374699\t63.96736\t943455000\tAsia\nChina\t1982\t962.4213805\t65.525\t1000281000\tAsia\nChina\t1987\t1378.904018\t67.274\t1084035000\tAsia\nChina\t1992\t1655.784158\t68.69\t1164970000\tAsia\nChina\t1997\t2289.234136\t70.426\t1230075000\tAsia\nChina\t2002\t3119.280896\t72.028\t1280400000\tAsia\nChina\t2007\t4959.114854\t72.961\t1318683096\tAsia\nFrance\t1952\t7029.809327\t67.41\t42459667\tEurope\nFrance\t1957\t8662.834898\t68.93\t44310863\tEurope\nFrance\t1962\t10560.48553\t70.51\t47124000\tEurope\nFrance\t1967\t12999.91766\t71.55\t49569000\tEurope\nFrance\t1972\t16107.19171\t72.38\t51732000\tEurope\nFrance\t1977\t18292.63514\t73.83\t53165019\tEurope\nFrance\t1982\t20293.89746\t74.89\t54433565\tEurope\nFrance\t1987\t22066.44214\t76.34\t55630100\tEurope\nFrance\t1992\t24703.79615\t77.46\t57374179\tEurope\nFrance\t1997\t25889.78487\t78.64\t58623428\tEurope\nFrance\t2002\t28926.03234\t79.59\t59925035\tEurope\nFrance\t2007\t30470.0167\t80.657\t61083916\tEurope\nGermany\t1952\t7144.114393\t67.5\t69145952\tEurope\nGermany\t1957\t10187.82665\t69.1\t71019069\tEurope\nGermany\t1962\t12902.46291\t70.3\t73739117\tEurope\nGermany\t1967\t14745.62561\t70.8\t76368453\tEurope\nGermany\t1972\t18016.18027\t71\t78717088\tEurope\nGermany\t1977\t20512.92123\t72.5\t78160773\tEurope\nGermany\t1982\t22031.53274\t73.8\t78335266\tEurope\nGermany\t1987\t24639.18566\t74.847\t77718298\tEurope\nGermany\t1992\t26505.30317\t76.07\t80597764\tEurope\nGermany\t1997\t27788.88416\t77.34\t82011073\tEurope\nGermany\t2002\t30035.80198\t78.67\t82350671\tEurope\nGermany\t2007\t32170.37442\t79.406\t82400996\tEurope\nJapan\t1952\t3216.956347\t63.03\t86459025\tAsia\nJapan\t1957\t4317.694365\t65.5\t91563009\tAsia\nJapan\t1962\t6576.649461\t68.73\t95831757\tAsia\nJapan\t1967\t9847.788607\t71.43\t100825279\tAsia\nJapan\t1972\t14778.78636\t73.42\t107188273\tAsia\nJapan\t1977\t16610.37701\t75.38\t113872473\tAsia\nJapan\t1982\t19384.10571\t77.11\t118454974\tAsia\nJapan\t1987\t22375.94189\t78.67\t122091325\tAsia\nJapan\t1992\t26824.89511\t79.36\t124329269\tAsia\nJapan\t1997\t28816.58499\t80.69\t125956499\tAsia\nJapan\t2002\t28604.5919\t82\t127065841\tAsia\nJapan\t2007\t31656.06806\t82.603\t127467972\tAsia\nMexico\t1952\t3478.125529\t50.789\t30144317\tAmericas\nMexico\t1957\t4131.546641\t55.19\t35015548\tAmericas\nMexico\t1962\t4581.609385\t58.299\t41121485\tAmericas\nMexico\t1967\t5754.733883\t60.11\t47995559\tAmericas\nMexico\t1972\t6809.40669\t62.361\t55984294\tAmericas\nMexico\t1977\t7674.929108\t65.032\t63759976\tAmericas\nMexico\t1982\t9611.147541\t67.405\t71640904\tAmericas\nMexico\t1987\t8688.156003\t69.498\t80122492\tAmericas\nMexico\t1992\t9472.384295\t71.455\t88111030\tAmericas\nMexico\t1997\t9767.29753\t73.67\t95895146\tAmericas\nMexico\t2002\t10742.44053\t74.902\t102479927\tAmericas\nMexico\t2007\t11977.57496\t76.195\t108700891\tAmericas\nSpain\t1952\t3834.034742\t64.94\t28549870\tEurope\nSpain\t1957\t4564.80241\t66.66\t29841614\tEurope\nSpain\t1962\t5693.843879\t69.69\t31158061\tEurope\nSpain\t1967\t7993.512294\t71.44\t32850275\tEurope\nSpain\t1972\t10638.75131\t73.06\t34513161\tEurope\nSpain\t1977\t13236.92117\t74.39\t36439000\tEurope\nSpain\t1982\t13926.16997\t76.3\t37983310\tEurope\nSpain\t1987\t15764.98313\t76.9\t38880702\tEurope\nSpain\t1992\t18603.06452\t77.57\t39549438\tEurope\nSpain\t1997\t20445.29896\t78.77\t39855442\tEurope\nSpain\t2002\t24835.47166\t79.78\t40152517\tEurope\nSpain\t2007\t28821.0637\t80.941\t40448191\tEurope\nUnited Kingdom\t1952\t9979.508487\t69.18\t50430000\tEurope\nUnited Kingdom\t1957\t11283.17795\t70.42\t51430000\tEurope\nUnited Kingdom\t1962\t12477.17707\t70.76\t53292000\tEurope\nUnited Kingdom\t1967\t14142.85089\t71.36\t54959000\tEurope\nUnited Kingdom\t1972\t15895.11641\t72.01\t56079000\tEurope\nUnited Kingdom\t1977\t17428.74846\t72.76\t56179000\tEurope\nUnited Kingdom\t1982\t18232.42452\t74.04\t56339704\tEurope\nUnited Kingdom\t1987\t21664.78767\t75.007\t56981620\tEurope\nUnited Kingdom\t1992\t22705.09254\t76.42\t57866349\tEurope\nUnited Kingdom\t1997\t26074.53136\t77.218\t58808266\tEurope\nUnited Kingdom\t2002\t29478.99919\t78.471\t59912431\tEurope\nUnited Kingdom\t2007\t33203.26128\t79.425\t60776238\tEurope\nUnited States\t1952\t13990.48208\t68.44\t157553000\tAmericas\nUnited States\t1957\t14847.12712\t69.49\t171984000\tAmericas\nUnited States\t1962\t16173.14586\t70.21\t186538000\tAmericas\nUnited States\t1967\t19530.36557\t70.76\t198712000\tAmericas\nUnited States\t1972\t21806.03594\t71.34\t209896000\tAmericas\nUnited States\t1977\t24072.63213\t73.38\t220239000\tAmericas\nUnited States\t1982\t25009.55914\t74.65\t232187835\tAmericas\nUnited States\t1987\t29884.35041\t75.02\t242803533\tAmericas\nUnited States\t1992\t32003.93224\t76.09\t256894189\tAmericas\nUnited States\t1997\t35767.43303\t76.81\t272911760\tAmericas\nUnited States\t2002\t39097.09955\t77.31\t287675526\tAmericas\nUnited States\t2007\t42951.65309\t78.242\t301139947\tAmericas`.trim();\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/app/data.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/jmh/workspace/demos/chart-builder-prototype/src/main.ts"],"sourceRoot":"webpack:///"}