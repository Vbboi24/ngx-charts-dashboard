{"version":3,"sources":["webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chartTypes.ts","webpack:///./src/app/data.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 194;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 194\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport * as shape from 'd3-shape';\nimport * as dsv from 'd3-dsv';\nimport { nest } from 'd3-collection';\nimport * as babyparse from 'babyparse';\nimport SvgSaver from 'svgsaver';\n\nimport { chartTypes } from './chartTypes';\nimport { gapminder } from './data';\n\nconst  curves = {\n  'Basis': shape.curveBasis,\n  'Basis Closed': shape.curveBasisClosed,\n  'Bundle': shape.curveBundle.beta(1),\n  'Cardinal': shape.curveCardinal,\n  'Cardinal Closed': shape.curveCardinalClosed,\n  'Catmull Rom': shape.curveCatmullRom,\n  'Catmull Rom Closed': shape.curveCatmullRomClosed,\n  'Linear': shape.curveLinear,\n  'Linear Closed': shape.curveLinearClosed,\n  'Monotone X': shape.curveMonotoneX,\n  'Monotone Y': shape.curveMonotoneY,\n  'Natural': shape.curveNatural,\n  'Step': shape.curveStep,\n  'Step After': shape.curveStepAfter,\n  'Step Before': shape.curveStepBefore,\n  'default': shape.curveLinear\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['../../node_modules/@swimlane/ngx-ui/release/index.css', './app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  title = 'app works!';\n\n  data: any[];\n  rawData: any[];\n\n  headerValues: any[];\n  errors: any[] = [];\n  chartType = 'bubble-chart';\n  chartTypes = chartTypes;\n  theme = 'light';\n\n  _dataText = gapminder;\n\n  get dataText() {\n    return this._dataText;\n  }\n\n  set dataText(value) {\n    this.updateData(value);\n  }\n\n  editorConfig = {\n    lineNumbers: true,\n    theme: 'dracula',\n    mode: {\n      name: 'json'\n    }\n  };\n\n  dataOptions = {\n    groupBy: 'country',\n    name: 'year',\n    value: 'gdp',\n    value2: 'life expectancy'\n  };\n\n  chartOptions = {\n    view: [1400, 600],\n    colorScheme: colorSets.find(s => s.name === 'cool'),\n    schemeType: 'ordinal',\n    showLegend: true,\n    legendTitle: 'Legend',\n    gradient: false,\n    showXAxis: true,\n    showYAxis: true,\n    showXAxisLabel: true,\n    showYAxisLabel: true,\n    yAxisLabel: 'GDP Per Capita',\n    xAxisLabel: 'Census Date',\n    autoScale: true,\n    showGridLines: true,\n    rangeFillOpacity: 0.5,\n    roundDomains: false,\n    tooltipDisabled: false,\n    showSeriesOnHover: true,\n    curve: shape.curveLinear,\n    curveClosed: shape.curveCardinalClosed\n  };\n\n  svgSaver = new SvgSaver();\n\n  ngOnInit() {\n    this.updateData();\n  }\n\n  clear() {\n    this.headerValues = [];\n    this.rawData = [];\n    return this.data = [];\n  }\n\n  processData() {\n    const key$ = d => d[this.dataOptions.groupBy];\n    const name$ = d => d[this.dataOptions.name];\n    const value$ = d => d[this.dataOptions.value];\n    const value2$ = d => d[this.dataOptions.value2];\n\n    return this.data = nest()\n      .key(key$)\n      .entries(this.rawData)\n      .map(series);\n\n    function series(d) {\n      return {\n        name: d.key,\n        series: d.values.map(seriesPoints)\n      };\n    }\n\n    function seriesPoints(d) {\n      return {\n        name: name$(d),\n        value: value$(d),\n        x: name$(d),\n        y: value$(d),\n        r: value2$(d)\n      };\n    }\n  }\n\n  updateData(value = this._dataText) {\n    /* if (this._dataText === value) {\n      return this.clear();\n    } */\n\n    this._dataText = value;\n    const parsed = babyparse.parse(this._dataText, {\n      header: true,\n      dynamicTyping: true\n    });\n\n    this.errors = parsed.errors;\n\n    if (this.errors.length) {\n      return this.clear();\n    }\n\n    this.rawData = parsed.data;\n\n    const headerValues = parsed.meta.fields.map(d => ({\n      name: d,\n      type: typeof parsed.data[0][d]\n    }));\n\n    if (JSON.stringify(headerValues) !== JSON.stringify(this.headerValues)) {\n      this.headerValues = headerValues;\n      this.dataOptions.groupBy = this.headerValues[0].name;\n      this.dataOptions.name = this.headerValues[1].name;\n      this.dataOptions.value = this.headerValues[2].name;\n      this.dataOptions.value2 = this.headerValues[3].name;\n    }\n\n    this.processData();\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { NgxUIModule } from '@swimlane/ngx-ui';\n// import { NgxDnDModule } from '@swimlane/ngx-dnd/src/';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxUIModule,\n    // NgxDnDModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export const chartTypes = [\n   { name: 'bar-vertical-2d' },\n   { name: 'bar-horizontal-2d' },\n   { name: 'bar-vertical-stacked' },\n   { name: 'bar-vertical-normalized' },\n   { name: 'bar-horizontal-normalized' },\n   { name: 'polar-chart' },\n   { name: 'line-chart' },\n   { name: 'heat-map' },\n   { name: 'bubble-chart' }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chartTypes.ts","export const gapminder = `\ncountry\tyear\tgdpPercap\tlifeExp\tpop\tcontinent\nAustralia\t1952\t10039.59564\t69.12\t8691212\tOceania\nAustralia\t1957\t10949.64959\t70.33\t9712569\tOceania\nAustralia\t1962\t12217.22686\t70.93\t10794968\tOceania\nAustralia\t1967\t14526.12465\t71.1\t11872264\tOceania\nAustralia\t1972\t16788.62948\t71.93\t13177000\tOceania\nAustralia\t1977\t18334.19751\t73.49\t14074100\tOceania\nAustralia\t1982\t19477.00928\t74.74\t15184200\tOceania\nAustralia\t1987\t21888.88903\t76.32\t16257249\tOceania\nAustralia\t1992\t23424.76683\t77.56\t17481977\tOceania\nAustralia\t1997\t26997.93657\t78.83\t18565243\tOceania\nAustralia\t2002\t30687.75473\t80.37\t19546792\tOceania\nAustralia\t2007\t34435.36744\t81.235\t20434176\tOceania\nCanada\t1952\t11367.16112\t68.75\t14785584\tAmericas\nCanada\t1957\t12489.95006\t69.96\t17010154\tAmericas\nCanada\t1962\t13462.48555\t71.3\t18985849\tAmericas\nCanada\t1967\t16076.58803\t72.13\t20819767\tAmericas\nCanada\t1972\t18970.57086\t72.88\t22284500\tAmericas\nCanada\t1977\t22090.88306\t74.21\t23796400\tAmericas\nCanada\t1982\t22898.79214\t75.76\t25201900\tAmericas\nCanada\t1987\t26626.51503\t76.86\t26549700\tAmericas\nCanada\t1992\t26342.88426\t77.95\t28523502\tAmericas\nCanada\t1997\t28954.92589\t78.61\t30305843\tAmericas\nCanada\t2002\t33328.96507\t79.77\t31902268\tAmericas\nCanada\t2007\t36319.23501\t80.653\t33390141\tAmericas\nChina\t1952\t400.4486107\t44\t556263528\tAsia\nChina\t1957\t575.9870009\t50.54896\t637408000\tAsia\nChina\t1962\t487.6740183\t44.50136\t665770000\tAsia\nChina\t1967\t612.7056934\t58.38112\t754550000\tAsia\nChina\t1972\t676.9000921\t63.11888\t862030000\tAsia\nChina\t1977\t741.2374699\t63.96736\t943455000\tAsia\nChina\t1982\t962.4213805\t65.525\t1000281000\tAsia\nChina\t1987\t1378.904018\t67.274\t1084035000\tAsia\nChina\t1992\t1655.784158\t68.69\t1164970000\tAsia\nChina\t1997\t2289.234136\t70.426\t1230075000\tAsia\nChina\t2002\t3119.280896\t72.028\t1280400000\tAsia\nChina\t2007\t4959.114854\t72.961\t1318683096\tAsia\nFrance\t1952\t7029.809327\t67.41\t42459667\tEurope\nFrance\t1957\t8662.834898\t68.93\t44310863\tEurope\nFrance\t1962\t10560.48553\t70.51\t47124000\tEurope\nFrance\t1967\t12999.91766\t71.55\t49569000\tEurope\nFrance\t1972\t16107.19171\t72.38\t51732000\tEurope\nFrance\t1977\t18292.63514\t73.83\t53165019\tEurope\nFrance\t1982\t20293.89746\t74.89\t54433565\tEurope\nFrance\t1987\t22066.44214\t76.34\t55630100\tEurope\nFrance\t1992\t24703.79615\t77.46\t57374179\tEurope\nFrance\t1997\t25889.78487\t78.64\t58623428\tEurope\nFrance\t2002\t28926.03234\t79.59\t59925035\tEurope\nFrance\t2007\t30470.0167\t80.657\t61083916\tEurope\nGermany\t1952\t7144.114393\t67.5\t69145952\tEurope\nGermany\t1957\t10187.82665\t69.1\t71019069\tEurope\nGermany\t1962\t12902.46291\t70.3\t73739117\tEurope\nGermany\t1967\t14745.62561\t70.8\t76368453\tEurope\nGermany\t1972\t18016.18027\t71\t78717088\tEurope\nGermany\t1977\t20512.92123\t72.5\t78160773\tEurope\nGermany\t1982\t22031.53274\t73.8\t78335266\tEurope\nGermany\t1987\t24639.18566\t74.847\t77718298\tEurope\nGermany\t1992\t26505.30317\t76.07\t80597764\tEurope\nGermany\t1997\t27788.88416\t77.34\t82011073\tEurope\nGermany\t2002\t30035.80198\t78.67\t82350671\tEurope\nGermany\t2007\t32170.37442\t79.406\t82400996\tEurope\nJapan\t1952\t3216.956347\t63.03\t86459025\tAsia\nJapan\t1957\t4317.694365\t65.5\t91563009\tAsia\nJapan\t1962\t6576.649461\t68.73\t95831757\tAsia\nJapan\t1967\t9847.788607\t71.43\t100825279\tAsia\nJapan\t1972\t14778.78636\t73.42\t107188273\tAsia\nJapan\t1977\t16610.37701\t75.38\t113872473\tAsia\nJapan\t1982\t19384.10571\t77.11\t118454974\tAsia\nJapan\t1987\t22375.94189\t78.67\t122091325\tAsia\nJapan\t1992\t26824.89511\t79.36\t124329269\tAsia\nJapan\t1997\t28816.58499\t80.69\t125956499\tAsia\nJapan\t2002\t28604.5919\t82\t127065841\tAsia\nJapan\t2007\t31656.06806\t82.603\t127467972\tAsia\nMexico\t1952\t3478.125529\t50.789\t30144317\tAmericas\nMexico\t1957\t4131.546641\t55.19\t35015548\tAmericas\nMexico\t1962\t4581.609385\t58.299\t41121485\tAmericas\nMexico\t1967\t5754.733883\t60.11\t47995559\tAmericas\nMexico\t1972\t6809.40669\t62.361\t55984294\tAmericas\nMexico\t1977\t7674.929108\t65.032\t63759976\tAmericas\nMexico\t1982\t9611.147541\t67.405\t71640904\tAmericas\nMexico\t1987\t8688.156003\t69.498\t80122492\tAmericas\nMexico\t1992\t9472.384295\t71.455\t88111030\tAmericas\nMexico\t1997\t9767.29753\t73.67\t95895146\tAmericas\nMexico\t2002\t10742.44053\t74.902\t102479927\tAmericas\nMexico\t2007\t11977.57496\t76.195\t108700891\tAmericas\nSpain\t1952\t3834.034742\t64.94\t28549870\tEurope\nSpain\t1957\t4564.80241\t66.66\t29841614\tEurope\nSpain\t1962\t5693.843879\t69.69\t31158061\tEurope\nSpain\t1967\t7993.512294\t71.44\t32850275\tEurope\nSpain\t1972\t10638.75131\t73.06\t34513161\tEurope\nSpain\t1977\t13236.92117\t74.39\t36439000\tEurope\nSpain\t1982\t13926.16997\t76.3\t37983310\tEurope\nSpain\t1987\t15764.98313\t76.9\t38880702\tEurope\nSpain\t1992\t18603.06452\t77.57\t39549438\tEurope\nSpain\t1997\t20445.29896\t78.77\t39855442\tEurope\nSpain\t2002\t24835.47166\t79.78\t40152517\tEurope\nSpain\t2007\t28821.0637\t80.941\t40448191\tEurope\nUnited Kingdom\t1952\t9979.508487\t69.18\t50430000\tEurope\nUnited Kingdom\t1957\t11283.17795\t70.42\t51430000\tEurope\nUnited Kingdom\t1962\t12477.17707\t70.76\t53292000\tEurope\nUnited Kingdom\t1967\t14142.85089\t71.36\t54959000\tEurope\nUnited Kingdom\t1972\t15895.11641\t72.01\t56079000\tEurope\nUnited Kingdom\t1977\t17428.74846\t72.76\t56179000\tEurope\nUnited Kingdom\t1982\t18232.42452\t74.04\t56339704\tEurope\nUnited Kingdom\t1987\t21664.78767\t75.007\t56981620\tEurope\nUnited Kingdom\t1992\t22705.09254\t76.42\t57866349\tEurope\nUnited Kingdom\t1997\t26074.53136\t77.218\t58808266\tEurope\nUnited Kingdom\t2002\t29478.99919\t78.471\t59912431\tEurope\nUnited Kingdom\t2007\t33203.26128\t79.425\t60776238\tEurope\nUnited States\t1952\t13990.48208\t68.44\t157553000\tAmericas\nUnited States\t1957\t14847.12712\t69.49\t171984000\tAmericas\nUnited States\t1962\t16173.14586\t70.21\t186538000\tAmericas\nUnited States\t1967\t19530.36557\t70.76\t198712000\tAmericas\nUnited States\t1972\t21806.03594\t71.34\t209896000\tAmericas\nUnited States\t1977\t24072.63213\t73.38\t220239000\tAmericas\nUnited States\t1982\t25009.55914\t74.65\t232187835\tAmericas\nUnited States\t1987\t29884.35041\t75.02\t242803533\tAmericas\nUnited States\t1992\t32003.93224\t76.09\t256894189\tAmericas\nUnited States\t1997\t35767.43303\t76.81\t272911760\tAmericas\nUnited States\t2002\t39097.09955\t77.31\t287675526\tAmericas\nUnited States\t2007\t42951.65309\t78.242\t301139947\tAmericas`.trim();\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n  * Backgrounds\\n  */\\n/**\\n  * Text\\n  */\\nhtml, body {\\n  margin: 10px;\\n  padding: 0;\\n  height: 100%;\\n  background: #1b1e27;\\n  color: #a8b2c7; }\\n\\nbody {\\n  font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue, Helvetica, Arial', sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-rendering: optimizeLegibility;\\n  min-height: 100vh;\\n  color: #a8b2c7; }\\n\\n* {\\n  box-sizing: border-box; }\\n\\n.main {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n  .main .CodeMirror {\\n    height: 250px; }\\n\\n.light {\\n  background: #fff; }\\n\\n.dark {\\n  background: #1b1e27; }\\n  .dark .ngx-charts text {\\n    fill: #a8b2c7; }\\n  .dark .ngx-charts .tooltip-anchor {\\n    fill: white; }\\n  .dark .ngx-charts .gridline-path {\\n    stroke: #2f3646; }\\n  .dark .ngx-charts .grid-panel.odd rect {\\n    fill: rgba(255, 255, 255, 0.05); }\\n  .dark .ngx-charts .force-directed-graph .edge {\\n    stroke: #455066; }\\n  .dark .ngx-charts .number-card p {\\n    color: #f0f1f6; }\\n  .dark .ngx-charts .gauge .background-arc path {\\n    fill: #2f3646; }\\n  .dark .ngx-charts .gauge .gauge-tick path {\\n    stroke: #a8b2c7; }\\n  .dark .ngx-charts .gauge .gauge-tick text {\\n    fill: #a8b2c7; }\\n  .dark .ngx-charts .linear-gauge .background-bar path {\\n    fill: #2f3646; }\\n  .dark .ngx-charts .linear-gauge .units {\\n    fill: #72809b; }\\n  .dark .ngx-charts .timeline .brush-background {\\n    fill: rgba(255, 255, 255, 0.05); }\\n  .dark .ngx-charts .timeline .brush .selection {\\n    fill: rgba(255, 255, 255, 0.1);\\n    stroke: #aaa; }\\n  .dark .ngx-charts .polar-chart .polar-chart-background {\\n    fill: #1e222e; }\\n  .dark .chart-legend .legend-labels {\\n    background: rgba(255, 255, 255, 0.05) !important; }\\n  .dark .chart-legend .legend-item:hover {\\n    color: #fff; }\\n  .dark .chart-legend .legend-label:hover {\\n    color: #fff !important; }\\n  .dark .chart-legend .legend-label .active .legend-label-text {\\n    color: #fff !important; }\\n  .dark .chart-legend .scale-legend-label {\\n    color: #a8b2c7; }\\n  .dark .advanced-pie-legend {\\n    color: #a8b2c7; }\\n    .dark .advanced-pie-legend .legend-item:hover {\\n      color: #fff !important; }\\n  .dark .number-card .number-card-label {\\n    font-size: 0.8em;\\n    color: #a8b2c7; }\\n\\n/**\\n * Header\\n */\\n.style-header {\\n  text-transform: uppercase;\\n  color: #72809b;\\n  font-size: 1rem;\\n  position: relative;\\n  padding-bottom: 5px;\\n  margin: 20px 0;\\n  font-weight: 600; }\\n  .style-header:after {\\n    content: \\\"\\\";\\n    width: 25px;\\n    height: 1px;\\n    background: #72809b;\\n    position: absolute;\\n    bottom: 0;\\n    left: 0; }\\n\\n.viz-container {\\n  position: relative;\\n  display: flow-root; }\\n\\nsvg.ngx-charts {\\n  float: left;\\n  overflow: visible; }\\n\\n.ngx-charts-outer {\\n  display: flow-root;\\n  position: relative; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 488\n// module chunks = 1","module.exports = \"<h1>ngx-chart builder</h1>\\n\\n<div class=\\\"main\\\">\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Your Data\\\">\\n    <span>\\n      Copy and paste your tabular (TSV, CSV) data here.\\n    </span>\\n    <ngx-codemirror\\n      [(ngModel)]=\\\"dataText\\\"\\n      [config]=\\\"editorConfig\\\">\\n    </ngx-codemirror>\\n    <p>\\n      <span *ngFor=\\\"let error of errors\\\" class=\\\"text-red\\\">\\n        Row {{error.row + 2}}: {{error.message | json}} <br />\\n      </span>\\n      <span *ngIf=\\\"!errors.length\\\" class=\\\"text-green\\\">\\n        {{rawData.length}} records have been successfully parsed!\\n      </span>\\n    </p>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Select your Chart\\\">\\n    <ngx-select [filterable]=\\\"false\\\" label=\\\"Chart Type\\\" [ngModel]=\\\"[chartType]\\\" (change)=\\\"chartType = $event[0]\\\">\\n      <ngx-select-option *ngFor=\\\"let chart of chartTypes\\\" [name]=\\\"chart.name\\\" [value]=\\\"chart.name\\\">\\n      </ngx-select-option>\\n    </ngx-select>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Map your Dimensions\\\">\\n\\n    <ngx-select\\n      [filterable]=\\\"false\\\"\\n      label=\\\"Group by\\\"\\n      [ngModel]=\\\"[dataOptions.groupBy]\\\"\\n      (change)=\\\"dataOptions.groupBy = $event[0]; processData()\\\">\\n      <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n        [name]=\\\"field\\\"\\n        [value]=\\\"field.name\\\">\\n        <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n          {{option.name.name}} <small>{{option.name.type}}</small>\\n        </ng-template>\\n      </ngx-select-option>\\n    </ngx-select>\\n\\n    <ngx-select\\n      [filterable]=\\\"false\\\"\\n      label=\\\"Name\\\"\\n      [ngModel]=\\\"[dataOptions.name]\\\"\\n      (change)=\\\"dataOptions.name = $event[0]; processData()\\\">\\n      <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n        [name]=\\\"field\\\"\\n        [value]=\\\"field.name\\\">\\n        <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n          {{option.name.name}} <small>{{option.name.type}}</small>\\n        </ng-template>\\n      </ngx-select-option>\\n    </ngx-select>\\n\\n    <ngx-select\\n      [filterable]=\\\"false\\\"\\n      label=\\\"Value\\\"\\n      [ngModel]=\\\"[dataOptions.value]\\\"\\n      (change)=\\\"dataOptions.value = $event[0]; processData()\\\">\\n      <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n        [name]=\\\"field\\\"\\n        [value]=\\\"field.name\\\">\\n        <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n          {{option.name.name}} <small>{{option.name.type}}</small>\\n        </ng-template>\\n      </ngx-select-option>\\n    </ngx-select>\\n\\n    <ngx-select\\n      [filterable]=\\\"false\\\"\\n      label=\\\"Value\\\"\\n      [ngModel]=\\\"[dataOptions.value2]\\\"\\n      (change)=\\\"dataOptions.value2 = $event[0]; processData()\\\">\\n      <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n        [name]=\\\"field\\\"\\n        [value]=\\\"field.name\\\">\\n        <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n          {{option.name.name}} <small>{{option.name.type}}</small>\\n        </ng-template>\\n      </ngx-select-option>\\n    </ngx-select>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow\\\" [class]=\\\"theme\\\" sectionTitle=\\\"Your Visualization\\\">\\n    <div *ngIf=\\\"data.length\\\" class=\\\"viz-container\\\">\\n      <ngx-charts-bar-vertical-2d\\n        *ngIf=\\\"chartType === 'bar-vertical-2d'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        xxxbarPadding=\\\"chartOptions.barPadding\\\"\\n        xxxgroupPadding=\\\"chartOptions.groupPadding\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-2d>\\n      <ngx-charts-bar-horizontal-2d\\n        *ngIf=\\\"chartType === 'bar-horizontal-2d'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-2d>\\n      <ngx-charts-bar-vertical-stacked\\n        *ngIf=\\\"chartType === 'bar-vertical-stacked'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-stacked>\\n      <ngx-charts-bar-horizontal-stacked\\n        *ngIf=\\\"chartType === 'bar-horizontal-stacked'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-stacked>\\n      <ngx-charts-bar-vertical-normalized\\n        *ngIf=\\\"chartType === 'bar-vertical-normalized'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-vertical-normalized>\\n      <ngx-charts-bar-horizontal-normalized\\n        *ngIf=\\\"chartType === 'bar-horizontal-normalized'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\">\\n      </ngx-charts-bar-horizontal-normalized>\\n      <ngx-charts-polar-chart\\n        *ngIf=\\\"chartType === 'polar-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [rangeFillOpacity]=\\\"chartOptions.rangeFillOpacity\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [curve]=\\\"chartOptions.curveClosed\\\"\\n        [showSeriesOnHover]=\\\"chartOptions.showSeriesOnHover\\\">\\n      </ngx-charts-polar-chart>\\n      <ngx-charts-line-chart\\n        *ngIf=\\\"chartType === 'line-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [curve]=\\\"chartOptions.curve\\\"\\n        [rangeFillOpacity]=\\\"chartOptions.rangeFillOpacity\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [showSeriesOnHover]=\\\"chartOptions.showSeriesOnHover\\\">\\n      </ngx-charts-line-chart>\\n      <ngx-charts-heat-map\\n        *ngIf=\\\"chartType === 'heat-map'\\\"\\n        class=\\\"chart-container\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [results]=\\\"data\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [gradient]=\\\"chartOptions.gradient\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        xxxinnerPadding=\\\"chartOptions.innerPadding\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\">\\n      </ngx-charts-heat-map>\\n      <ngx-charts-bubble-chart\\n        *ngIf=\\\"chartType === 'bubble-chart'\\\"\\n        [view]=\\\"chartOptions.view\\\"\\n        class=\\\"chart-container\\\"\\n        [results]=\\\"data\\\"\\n        [showGridLines]=\\\"chartOptions.showGridLines\\\"\\n        [legend]=\\\"chartOptions.showLegend\\\"\\n        [legendTitle]=\\\"chartOptions.legendTitle\\\"\\n        [xAxis]=\\\"chartOptions.showXAxis\\\"\\n        [yAxis]=\\\"chartOptions.showYAxis\\\"\\n        [showXAxisLabel]=\\\"chartOptions.showXAxisLabel\\\"\\n        [showYAxisLabel]=\\\"chartOptions.showYAxisLabel\\\"\\n        [xAxisLabel]=\\\"chartOptions.xAxisLabel\\\"\\n        [yAxisLabel]=\\\"chartOptions.yAxisLabel\\\"\\n        [autoScale]=\\\"chartOptions.autoScale\\\"\\n        [scheme]=\\\"chartOptions.colorScheme\\\"\\n        [schemeType]=\\\"chartOptions.schemeType\\\"\\n        [roundDomains]=\\\"chartOptions.roundDomains\\\"\\n        [tooltipDisabled]=\\\"chartOptions.tooltipDisabled\\\"\\n        [minRadius]=\\\"3\\\"\\n        [maxRadius]=\\\"20\\\">\\n      </ngx-charts-bubble-chart>\\n    </div>\\n    Download: \\n    <ngx-button (click)=\\\"svgSaver.asSvg()\\\">SVG</ngx-button>\\n    <ngx-button (click)=\\\"svgSaver.asPng()\\\">PNG</ngx-button>\\n  </ngx-section>\\n\\n  <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Customize your Visualization\\\" sectionCollapsed=\\\"true\\\">\\n\\n    <ngx-select\\n      [filterable]=\\\"false\\\"\\n      label=\\\"Theme\\\"\\n      [ngModel]=\\\"[theme]\\\"\\n      (change)=\\\"theme = $event[0]\\\">\\n      <ngx-select-option *ngFor=\\\"let theme of ['light', 'dark']\\\"\\n        [name]=\\\"theme\\\"\\n        [value]=\\\"theme\\\">\\n      </ngx-select-option>\\n    </ngx-select>\\n\\n    <div>\\n      <label>Theme:</label><br />\\n      <select [(ngModel)]=\\\"theme\\\">\\n        <option *ngFor=\\\"let theme of ['light', 'dark']\\\">\\n          {{theme}}\\n        </option>\\n      </select>\\n    </div>\\n    <ngx-toggle type=\\\"checkbox\\\" [(ngModel)]=\\\"chartOptions.showLegend\\\" label=\\\"Show Legend\\\">\\n    </ngx-toggle>\\n    <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.legendTitle\\\" label=\\\"Legend Title\\\"></ngx-input>\\n    <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.xAxisLabel\\\" label=\\\"X Axis Label\\\"></ngx-input>\\n    <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.yAxisLabel\\\" label=\\\"Y Axis Label\\\"></ngx-input>\\n  </ngx-section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 495\n// module chunks = 1"],"sourceRoot":""}