{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/chart-builder/chart-builder.component.html","./src/app/chart-builder/chart-builder.component.scss","./src/app/chart-builder/chart-builder.component.ts","./src/app/chart-dashboard/chart-dashboard.component.html","./src/app/chart-dashboard/chart-dashboard.component.scss","./src/app/chart-dashboard/chart-dashboard.component.ts","./src/app/chart/chart.component.css","./src/app/chart/chart.component.html","./src/app/chart/chart.component.ts","./src/app/chartTypes.ts","./src/app/data.service.ts","./src/app/data.ts","./src/app/utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<h1>ngx-chart dashboard builder\\n  <small class=\\\"pull-right\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"onResetClicked()\\\">Reset</button>\\n    <a href=\\\"https://github.com/swimlane/ngx-charts-builder\\\" class=\\\"btn btn-default\\\">Github</a>\\n  </small>\\n</h1>\\n\\n<div class=\\\"main\\\">\\n\\n  <ngx-tabs #tabs>\\n    <ngx-tab title=\\\"Data\\\" #dataTab>\\n      <div *ngxIfTabActive>\\n\\n        <span>\\n          Copy and paste your tabular (TSV, CSV) data here.\\n          <button class=\\\"btn btn-link\\\" (click)=\\\"useExample()\\\">(Use example data)</button>\\n        </span>\\n        <ngx-codemirror\\n          [(ngModel)]=\\\"dataText\\\"\\n          [config]=\\\"editorConfig\\\">\\n        </ngx-codemirror>\\n        <p *ngIf=\\\"dataText.length > 1\\\">\\n          <span *ngFor=\\\"let error of errors\\\" class=\\\"text-red\\\">\\n            <span *ngIf=\\\"error.row\\\">Row {{error.row + 2}}: </span>{{error.message}} <br />\\n          </span>\\n          <span *ngIf=\\\"!errors.length\\\" class=\\\"text-green\\\">\\n            {{rawData.length}} records have been successfully parsed!\\n          </span>\\n        </p>\\n\\n      </div>\\n    </ngx-tab>\\n    <ngx-tab title=\\\"Chart Builder\\\" [disabled]=\\\"!hasValidData\\\" #builderTab>\\n      <app-chart-builder (addChart)=\\\"addChartToDashboard($event)\\\"></app-chart-builder>\\n    </ngx-tab>\\n    <ngx-tab title=\\\"Dashboard\\\" [disabled]=\\\"charts.length < 1\\\" #dashboardTab>\\n      <app-chart-dashboard [charts]=\\\"charts\\\" [filters]=\\\"filters\\\"></app-chart-dashboard>\\n    </ngx-tab>\\n  </ngx-tabs>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"/**\\n  * Backgrounds\\n  */\\n/**\\n  * Text\\n  */\\nhtml, body {\\n  margin: 10px;\\n  padding: 0;\\n  height: 100%;\\n  background: #1b1e27;\\n  color: #a8b2c7; }\\nbody {\\n  font-family: 'RobotoDraft', 'Roboto', 'Helvetica Neue, Helvetica, Arial', sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n  text-rendering: optimizeLegibility;\\n  min-height: 100vh;\\n  color: #a8b2c7; }\\n* {\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box; }\\n.main {\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; }\\n.main .CodeMirror {\\n    min-height: 800px; }\\n.light {\\n  background: #fff; }\\n.dark {\\n  background: #1b1e27; }\\n.dark .ngx-charts text {\\n    fill: #a8b2c7; }\\n.dark .ngx-charts .tooltip-anchor {\\n    fill: white; }\\n.dark .ngx-charts .gridline-path {\\n    stroke: #2f3646; }\\n.dark .ngx-charts .grid-panel.odd rect {\\n    fill: rgba(255, 255, 255, 0.05); }\\n.dark .ngx-charts .force-directed-graph .edge {\\n    stroke: #455066; }\\n.dark .ngx-charts .number-card p {\\n    color: #f0f1f6; }\\n.dark .ngx-charts .gauge .background-arc path {\\n    fill: #2f3646; }\\n.dark .ngx-charts .gauge .gauge-tick path {\\n    stroke: #a8b2c7; }\\n.dark .ngx-charts .gauge .gauge-tick text {\\n    fill: #a8b2c7; }\\n.dark .ngx-charts .linear-gauge .background-bar path {\\n    fill: #2f3646; }\\n.dark .ngx-charts .linear-gauge .units {\\n    fill: #72809b; }\\n.dark .ngx-charts .timeline .brush-background {\\n    fill: rgba(255, 255, 255, 0.05); }\\n.dark .ngx-charts .timeline .brush .selection {\\n    fill: rgba(255, 255, 255, 0.1);\\n    stroke: #aaa; }\\n.dark .ngx-charts .polar-chart .polar-chart-background {\\n    fill: #1e222e; }\\n.dark .chart-legend .legend-labels {\\n    background: rgba(255, 255, 255, 0.05) !important; }\\n.dark .chart-legend .legend-item:hover {\\n    color: #fff; }\\n.dark .chart-legend .legend-label:hover {\\n    color: #fff !important; }\\n.dark .chart-legend .legend-label .active .legend-label-text {\\n    color: #fff !important; }\\n.dark .chart-legend .scale-legend-label {\\n    color: #a8b2c7; }\\n.dark .advanced-pie-legend {\\n    color: #a8b2c7; }\\n.dark .advanced-pie-legend .legend-item:hover {\\n      color: #fff !important; }\\n.dark .number-card .number-card-label {\\n    font-size: 0.8em;\\n    color: #a8b2c7; }\\n/**\\n * Header\\n */\\n.style-header {\\n  text-transform: uppercase;\\n  color: #72809b;\\n  font-size: 1rem;\\n  position: relative;\\n  padding-bottom: 5px;\\n  margin: 20px 0;\\n  font-weight: 600; }\\n.style-header:after {\\n    content: \\\"\\\";\\n    width: 25px;\\n    height: 1px;\\n    background: #72809b;\\n    position: absolute;\\n    bottom: 0;\\n    left: 0; }\\nsvg.ngx-charts {\\n  float: left;\\n  overflow: visible; }\\n.ngx-charts-outer {\\n  display: flow-root;\\n  position: relative; }\\n.pull-right {\\n  float: right; }\\napp-chart {\\n  display: block;\\n  width: 100%;\\n  height: 400px;\\n  margin-bottom: 60px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component, ViewEncapsulation, OnInit, ViewChild, TemplateRef, NgZone } from '@angular/core';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport SvgSaver from 'svgsaver';\n\nimport { TabsComponent, TabComponent } from '@swimlane/ngx-ui';\n\nimport { Chart, Filter, Data, Query } from './data.models';\nimport { DataService } from './data.service';\nimport { gapminder } from './data';\nimport { toCapitalizedWords } from './utils';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  charts: Chart[] = [];\n  filters: Filter[] = [];\n\n  @ViewChild('tabs') tabs: TabsComponent;\n  @ViewChild('dashboardTab') dashboardTab: TabComponent;\n  @ViewChild('dataTab') dataTab: TabComponent;\n\n  _dataText = ' ';\n  errors: any[] = [];\n  rawData: Data[] = [];\n\n  get dataText(): string {\n    return this._dataText || ' ';\n  }\n\n  set dataText(value: string) {\n    this.updateData(value);\n  }\n\n  get hasValidData() {\n    return this._dataText.length > 0 && this.errors.length === 0;\n  }\n\n  editorConfig = {\n    lineNumbers: true,\n    theme: 'dracula',\n    mode: {\n      name: 'json'\n    }\n  };\n\n  svgSaver; // = new SvgSaver();\n\n  constructor(private ngZone: NgZone, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.clearAll();\n  }\n\n  async useExample() {\n    this._dataText = gapminder;\n    await this.updateData();\n    // this.dataDims = [5, 0, 3, 3].map(i => this.headerValues[i].name);\n\n    this.ngZone.run(() => {});\n  }\n\n  onResetClicked() {\n    this.clearAll();\n    this.tabs.tabClicked(this.dataTab);\n  }\n\n  clearAll() {\n    this.dataText = '';\n    this.charts = [];\n  }\n\n  async addChartToDashboard(chart: Chart) {\n    this.charts.push(chart);\n\n    // todo: assumes single series chart\n    const x = this.dataService.createQuery(chart.dataDims[0], chart.dataDims[2], chart.dataDims[4]);\n    const y = this.dataService.createQuery(chart.dataDims[2], 'count');\n\n    const qs = await Promise.all([x, y]);\n\n    chart.xQuery = qs[0];\n    chart.yQuery = qs[1];\n\n    chart.xFilter = this.addFilter(chart.xQuery);\n    chart.yFilter = this.addFilter(chart.yQuery);\n\n    this.tabs.tabClicked(this.dashboardTab);\n  }\n\n  private async updateData(value = this._dataText) {\n    const data = await this.dataService.updateData(value);\n\n    if (data.length < 1 || this.errors.length) {\n      this._dataText = '';\n      this.errors = [];\n      return;\n    }\n\n    this.rawData = data;\n    this._dataText = value;\n  }\n\n  private addFilter(query: Query): Filter {\n    const key = query.column.key;\n    let filter = this.filters.find(c => c.key === key);\n    if (!filter) {\n      const values = query.column.values;\n      const minValue = Math.min(...values);\n      const maxValue = Math.max(...values);\n\n      const type = (values.length < 6 || isNaN(minValue) || isNaN(maxValue)) ? 'cat' : 'value';\n\n      const range = type === 'value' ? [minValue, maxValue] : [];\n\n      filter = {\n        type,\n        label: toCapitalizedWords(key),\n        key,\n        minValue,\n        maxValue,\n        query,\n        step: 1,\n        values,\n        rangeIndex: {},\n        range\n      };\n      this.filters.push(filter);\n    }\n    return filter;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { NgxUIModule } from '@swimlane/ngx-ui';\n// import { NgxDnDModule } from '@swimlane/ngx-dnd/src/';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppComponent } from './app.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { DataService } from './data.service';\nimport { ChartBuilderComponent } from './chart-builder/chart-builder.component';\nimport { ChartDashboardComponent } from './chart-dashboard/chart-dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChartComponent,\n    ChartBuilderComponent,\n    ChartDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgxUIModule,\n    // NgxDnDModule,\n    NgxChartsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div>\\n\\n    <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Select your Chart\\\">\\n      <ngx-select [filterable]=\\\"false\\\" label=\\\"Chart Type\\\" [ngModel]=\\\"[chartType]\\\" (change)=\\\"chartType = $event[0]\\\">\\n        <ngx-select-option *ngFor=\\\"let chart of chartTypes\\\" [name]=\\\"chart.title\\\" [value]=\\\"chart\\\">\\n        </ngx-select-option>\\n      </ngx-select>\\n    </ngx-section>\\n  \\n    <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Map your Dimensions\\\"\\n      [sectionCollapsible]=\\\"hasChartSelected\\\"\\n      [sectionCollapsed]=\\\"!hasChartSelected\\\">\\n      <div *ngIf=\\\"hasChartSelected\\\">\\n        <ngx-select\\n          *ngIf=\\\"chartType.dimLabels[0] && chartType\\\"\\n          [filterable]=\\\"false\\\"\\n          [label]=\\\"chartType.dimLabels[0]\\\"\\n          [ngModel]=\\\"[dataDims[0]]\\\"\\n          (change)=\\\"dataDims[0] = $event[0]; processData()\\\">\\n          <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n            [name]=\\\"field\\\"\\n            [value]=\\\"field.name\\\">\\n            <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n              {{option.name.name}} <small>{{option.name.type}}</small>\\n            </ng-template>\\n          </ngx-select-option>\\n        </ngx-select>\\n  \\n        <ngx-select\\n          *ngIf=\\\"chartType.dimLabels[1]\\\"\\n          [filterable]=\\\"false\\\"\\n          [label]=\\\"chartType.dimLabels[1]\\\"\\n          [ngModel]=\\\"[dataDims[1]]\\\"\\n          (change)=\\\"dataDims[1] = $event[0]; processData()\\\">\\n          <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n            [name]=\\\"field\\\"\\n            [value]=\\\"field.name\\\">\\n            <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n              {{option.name.name}} <small>{{option.name.type}}</small>\\n            </ng-template>\\n          </ngx-select-option>\\n        </ngx-select>\\n  \\n        <ngx-select\\n          *ngIf=\\\"chartType.dimLabels[2]\\\"\\n          [filterable]=\\\"false\\\"\\n          [label]=\\\"chartType.dimLabels[2]\\\"\\n          [ngModel]=\\\"[dataDims[2]]\\\"\\n          (change)=\\\"dataDims[2] = $event[0]; processData()\\\">\\n          <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n            [name]=\\\"field\\\"\\n            [value]=\\\"field.name\\\">\\n            <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n              {{option.name.name}} <small>{{option.name.type}}</small>\\n            </ng-template>\\n          </ngx-select-option>\\n        </ngx-select>\\n  \\n        <ngx-select\\n          *ngIf=\\\"chartType.dimLabels[3]\\\"\\n          [filterable]=\\\"false\\\"\\n          [label]=\\\"chartType.dimLabels[3]\\\"\\n          [ngModel]=\\\"[dataDims[3]]\\\"\\n          (change)=\\\"dataDims[3] = $event[0]; processData()\\\">\\n          <ngx-select-option *ngFor=\\\"let field of headerValues\\\"\\n            [name]=\\\"field\\\"\\n            [value]=\\\"field.name\\\">\\n            <ng-template ngx-select-option-input-template ngx-select-option-template let-option=\\\"option\\\">\\n              {{option.name.name}} <small>{{option.name.type}}</small>\\n            </ng-template>\\n          </ngx-select-option>\\n        </ngx-select>\\n\\n        <ngx-select\\n          *ngIf=\\\"chartType.dimLabels[4]\\\"\\n          [filterable]=\\\"false\\\"\\n          [label]=\\\"chartType.dimLabels[4]\\\"\\n          [ngModel]=\\\"[dataDims[4]]\\\"\\n          (change)=\\\"dataDims[4] = $event[0]; processData()\\\">\\n          <ngx-select-option *ngFor=\\\"let agg of aggragates\\\"\\n            [name]=\\\"agg\\\"\\n            [value]=\\\"agg\\\">\\n          </ngx-select-option>\\n        </ngx-select>\\n      </div>\\n    </ngx-section>\\n  \\n    <ngx-section class=\\\"shadow\\\" [ngClass]=\\\"theme\\\" sectionTitle=\\\"Your Visualization\\\"\\n      [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n      [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n      <ngx-button (click)=\\\"onAddToDashboard()\\\">Add to dashboard</ngx-button>\\n      <div *ngIf=\\\"hasValidDimensions\\\" class=\\\"viz-container\\\">\\n\\n        <app-chart\\n          [chart]=\\\"chartOptions\\\"\\n          [data]=\\\"data\\\"\\n          [chartType]=\\\"chartType\\\">\\n        </app-chart>\\n\\n      </div>\\n      <!-- Download: \\n      <ngx-button (click)=\\\"svgSaver.asSvg()\\\">SVG</ngx-button>\\n      <ngx-button (click)=\\\"svgSaver.asPng()\\\">PNG</ngx-button -->\\n    </ngx-section>\\n  \\n    <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Customize your Visualization\\\"\\n      [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n      [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n      <div *ngIf=\\\"hasValidDimensions\\\">\\n        <ngx-select\\n          [filterable]=\\\"false\\\"\\n          label=\\\"Theme\\\"\\n          [allowClear]=\\\"false\\\"\\n          [ngModel]=\\\"[theme]\\\"\\n          (change)=\\\"theme = $event[0]\\\">\\n          <ngx-select-option *ngFor=\\\"let theme of ['light', 'dark']\\\"\\n            [name]=\\\"theme\\\"\\n            [value]=\\\"theme\\\">\\n          </ngx-select-option>\\n        </ngx-select>\\n    \\n        <ngx-toggle type=\\\"checkbox\\\" [(ngModel)]=\\\"chartOptions.showLegend\\\" label=\\\"Show Legend\\\">\\n        </ngx-toggle>\\n        <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.legendTitle\\\" label=\\\"Legend Title\\\"></ngx-input>\\n        <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.xAxisLabel\\\" label=\\\"X Axis Label\\\"></ngx-input>\\n        <ngx-input type=\\\"text\\\" [(ngModel)]=\\\"chartOptions.yAxisLabel\\\" label=\\\"Y Axis Label\\\"></ngx-input>\\n      </div>\\n    </ngx-section>\\n  \\n    <ngx-section class=\\\"shadow dark\\\" sectionTitle=\\\"Customize Color Scale\\\"\\n      [sectionCollapsible]=\\\"hasValidDimensions\\\"\\n      [sectionCollapsed]=\\\"!hasValidDimensions\\\">\\n  \\n      <ng-container *ngIf=\\\"hasValidDimensions\\\">\\n        <ngx-toggle\\n          [(ngModel)]=\\\"diverging\\\"\\n          label=\\\"Diverging\\\"\\n          (change)=\\\"updateColorScheme()\\\">\\n        </ngx-toggle>\\n        <ngx-input\\n          type=\\\"number\\\"\\n          min=\\\"2\\\"\\n          label=\\\"Step count\\\"\\n          [(ngModel)]=\\\"steps\\\"\\n          (change)=\\\"updateColorScheme()\\\"></ngx-input>\\n  \\n        <div fxLayout=\\\"row nowrap\\\" fxLayoutGap=\\\"20px\\\">\\n          <div  fxFlex=\\\"1 1 100%\\\">\\n            <ngx-input\\n              class=\\\"colors\\\"\\n              type=\\\"text\\\"\\n              [(ngModel)]=\\\"colors\\\"\\n              (change)=\\\"updateColorScheme()\\\"\\n              label=\\\"Color Scale\\\"\\n              hint=\\\"Enter named colors or hex codes\\\"></ngx-input>\\n            <ngx-checkbox\\n              [(ngModel)]=\\\"bezier\\\"\\n              (change)=\\\"updateColorScheme()\\\">\\n              Bezier interpollation\\n            </ngx-checkbox>\\n            <ngx-checkbox\\n              [(ngModel)]=\\\"lightness\\\"\\n              (change)=\\\"updateColorScheme()\\\">\\n              Lightness correction\\n            </ngx-checkbox>\\n          </div>\\n          <div fxFlex=\\\"1 1 100%\\\" *ngIf=\\\"diverging\\\">\\n            <ngx-input\\n              class=\\\"colors\\\"\\n              type=\\\"text\\\"\\n              [(ngModel)]=\\\"colorsRight\\\"\\n              (change)=\\\"updateColorScheme()\\\"\\n              label=\\\"Color Scale Right\\\"\\n              hint=\\\"Enter named colors or hex codes\\\"></ngx-input>\\n            <ngx-checkbox\\n              [(ngModel)]=\\\"bezierRight\\\"\\n              (change)=\\\"updateColorScheme()\\\">\\n              Bezier interpollation\\n            </ngx-checkbox>\\n            <ngx-checkbox\\n              [(ngModel)]=\\\"lightnessRight\\\"\\n              (change)=\\\"updateColorScheme()\\\">\\n              Lightness correction\\n            </ngx-checkbox>\\n          </div>\\n          <div fxFlex=\\\"0 0 200px\\\">\\n            <ul class=\\\"color-scale pull-right\\\">\\n              <li *ngFor=\\\"let hex of chartOptions.colorScheme.domain\\\" [ngStyle]=\\\"{'background-color': hex}\\\">{{hex}}</li>\\n            </ul>\\n          </div>\\n        </div>\\n      </ng-container>\\n  \\n    </ngx-section>\\n\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart-builder/chart-builder.component.html\n// module id = ./src/app/chart-builder/chart-builder.component.html\n// module chunks = main","module.exports = \".viz-container {\\n  position: relative;\\n  display: block;\\n  width: 100%; }\\n  .viz-container .chart {\\n    max-height: 600px; }\\n  .color-scale {\\n  text-align: center;\\n  width: 100%;\\n  list-style-type: none;\\n  padding-left: 0;\\n  margin: 0; }\\n  .color-scale li {\\n    margin: 3px;\\n    border-radius: 3px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart-builder/chart-builder.component.scss\n// module id = ./src/app/chart-builder/chart-builder.component.scss\n// module chunks = main","import { Component, OnInit, NgZone, Output, EventEmitter } from '@angular/core';\nimport { colorSets } from '@swimlane/ngx-charts/release/utils/color-sets';\nimport * as shape from 'd3-shape';\nimport chroma from 'chroma-js';\n\nimport { Chart, Filter, Data, Query } from '../data.models';\nimport { DataService } from '../data.service';\nimport { chartTypes } from '../chartTypes';\nimport { toCapitalizedWords } from '../utils';\n\nconst defaultOptions = {\n  view: undefined,\n  colorScheme: colorSets.find(s => s.name === 'cool'),\n  schemeType: 'ordinal',\n  showLegend: true,\n  legendTitle: 'Legend',\n  gradient: false,\n  showXAxis: true,\n  showYAxis: true,\n  showXAxisLabel: true,\n  showYAxisLabel: true,\n  yAxisLabel: '',\n  xAxisLabel: '',\n  autoScale: true,\n  showGridLines: true,\n  rangeFillOpacity: 0.5,\n  roundDomains: false,\n  tooltipDisabled: false,\n  showSeriesOnHover: true,\n  curve: shape.curveLinear,\n  curveClosed: shape.curveCardinalClosed\n} as Chart;\n\n@Component({\n  selector: 'app-chart-builder',\n  templateUrl: './chart-builder.component.html',\n  styleUrls: ['./chart-builder.component.scss']\n})\nexport class ChartBuilderComponent implements OnInit {\n  chartTypes = chartTypes;\n\n  dataDims: string[] = [null, null, null, null, 'count'];\n  chartOptions: Chart;\n  colors: string;\n  colorsRight: string;\n  steps: number;\n  bezier: boolean;\n  lightness: boolean;\n  bezierRight: boolean;\n  lightnessRight: boolean;\n  diverging: boolean;\n  theme: string;\n  chartType: any = chartTypes[0];\n\n  data: Data[] = [];\n  headerValues: any[] = [];\n\n  aggragates = ['count', 'sum', 'avg', 'max', 'min'];\n\n  @Output() addChart: EventEmitter<Chart> = new EventEmitter();\n\n  get hasChartSelected(): boolean {\n    return this.chartType && this.chartType.name;\n  }\n\n  get hasValidDimensions(): boolean {\n    return this.hasChartSelected &&\n      !this.chartType.dimLabels.some((l, i) => l ? !this.dataDims[i] : false);\n  }\n\n  constructor(private ngZone: NgZone, private dataService: DataService) {\n    dataService.universeUpdated.subscribe(() => {\n      this.clearAll();\n\n      const headerValues = this.dataService.headerValues;\n\n      if (JSON.stringify(headerValues) !== JSON.stringify(this.headerValues)) {\n        this.headerValues = headerValues.slice();\n        this.dataDims = [null, null, null, null, 'count'];\n        this.data = [];\n      } else {\n        this.processData();\n      }\n    });\n  }\n\n  async processData() {\n    if (!this.hasValidDimensions) {\n      return;\n    }\n\n    // todo: this assumes bar chart/single series\n    const xKey = this.dataDims[0];\n    const yKey = this.dataDims[2];\n    const agg = this.dataDims[4];\n\n    const x = this.chartOptions.xAxisLabel = this.chartOptions.legendTitle = toCapitalizedWords(xKey);\n    const y = toCapitalizedWords(yKey);\n    const a = toCapitalizedWords(agg);\n\n    this.chartOptions.yAxisLabel = `${a} of ${y}`;\n    this.chartOptions.title = `${a} of ${y} vs ${x}`;\n\n    const query = await this.dataService.createQuery(xKey, yKey, agg);\n    this.data = this.dataService.getChartSeriesFromQuery(query, yKey, agg);\n\n    this.ngZone.run(() => { });\n  }\n\n  ngOnInit() {\n    this.dataDims = [null, null, null, null, 'count'];\n    this.clearAll();\n  }\n\n  clearAll() {\n    this.chartType = chartTypes[0];\n    this.theme = 'dark';\n    this.colors = '#a8385d,#7aa3e5,#a27ea8,#aae3f5,#adcded,#a95963,#8796c0,#7ed3ed,#50abcc,#ad6886';\n    this.colorsRight = 'darkred, deeppink, orange, lightyellow';\n    this.steps = 10;\n    this.bezier = false;\n    this.lightness = false;\n    this.bezierRight = false;\n    this.lightnessRight = false;\n    this.bezier = false;\n    this.lightness = false;\n    this.chartOptions = {...defaultOptions} as Chart;\n    return this.updateColorScheme();\n  }\n\n  updateColorScheme() {\n    const domain = this.diverging ? this.updateColorSchemeDiv() : this.updateColorSchemeSeq();\n    this.chartOptions.colorScheme = {...this.chartOptions.colorScheme, domain};\n  }\n\n  async onAddToDashboard() {\n    const chart = {...this.chartOptions};\n    chart.data = this.data.slice();\n    chart.chartType = {...this.chartType};\n    chart.dataDims = this.dataDims.slice();\n    chart.theme = this.theme;\n    this.addChart.emit(chart);\n  }\n\n  private updateColorSchemeSeq() {\n    return getColorScale(this.colors, this.bezier, this.lightness).colors(this.steps);\n  }\n\n  private updateColorSchemeDiv() {\n    const domainL = getColorScale(this.colors, this.bezier, this.lightness).colors(this.steps);\n    const domainR = getColorScale(this.colorsRight, this.bezierRight, this.lightnessRight).colors(this.steps);\n\n    if (domainL[domainL.length - 1] === domainR[0]) {\n      domainL.pop();\n    }\n\n    return chroma.scale([...domainL, ...domainR]).colors(this.steps);\n  }\n}\n\nfunction getColorScale(colors: string, bezier: boolean, lightness: boolean): any {\n  const cleanColors = clean(colors);\n  const scale = bezier ? chroma.bezier(cleanColors.slice(0, 5)).scale() : chroma.scale(cleanColors);\n  return scale.mode('lab').correctLightness(lightness);\n\n  function clean(s: string): string[] {\n    return s.trim().replace(/(, *| +)/g, ',').replace(/['\"]/g, '').split(',');\n  }\n}\n\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chart-builder/chart-builder.component.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"charts\\\">\\n    <div class=\\\"viz-container\\\" [ngClass]=\\\"chart.theme\\\" *ngFor=\\\"let chart of charts\\\">\\n        <h1></h1>\\n        <app-chart\\n          class=\\\"chart\\\"\\n          [chart]=\\\"chart\\\"\\n          [data]=\\\"chart.data\\\"\\n          [chartType]=\\\"chart.chartType\\\"\\n          (select)=\\\"onSelect()\\\">\\n        </app-chart>\\n      </div>\\n  </div>\\n  <div class=\\\"filters\\\">\\n    <div class=\\\"filter\\\" *ngFor=\\\"let filter of filters\\\">\\n      <button class=\\\"pull-right\\\" (click)=\\\"onClear(filter)\\\">(clear)</button>\\n      <div *ngIf=\\\"filter.type === 'value'\\\">\\n        {{filter.label}}\\n        <ngx-slider\\n          [(ngModel)]=\\\"filter.range[0]\\\"\\n          [step]=\\\"filter.step\\\"\\n          [filled]=\\\"true\\\"\\n          [min]=\\\"filter.minValue\\\"\\n          [max]=\\\"filter.maxValue\\\"\\n          (change)=\\\"updateFilters()\\\">\\n        </ngx-slider>\\n        {{filter.range[0]}}\\n      </div>\\n      <div *ngIf=\\\"filter.type === 'cat'\\\">\\n        <label>{{filter.label}}</label>\\n        <ul class=\\\"vertical-list\\\">\\n          <li *ngFor=\\\"let item of filter.query.data\\\">\\n            <ngx-checkbox\\n              [(ngModel)]=\\\"filter.rangeIndex[item.key]\\\"\\n              (change)=\\\"updateFilters()\\\">\\n              {{item.key}} ({{item.value.count}})\\n            </ngx-checkbox>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart-dashboard/chart-dashboard.component.html\n// module id = ./src/app/chart-dashboard/chart-dashboard.component.html\n// module chunks = main","module.exports = \".container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex; }\\n  .container > div.charts {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 100%;\\n            flex: 1 1 100%;\\n    text-align: center;\\n    margin-right: 10px; }\\n  .container > div.charts .viz-container {\\n      margin: 30px 0 10px 0; }\\n  .container > div.charts .chart {\\n      max-height: 600px;\\n      margin-top: 60px; }\\n  .container > div.filters {\\n    -webkit-box-flex: 0;\\n        -ms-flex: 0 0 250px;\\n            flex: 0 0 250px;\\n    margin-left: 10px; }\\n  .container > div.filters .filter {\\n      margin-top: 20px;\\n      width: 100%;\\n      clear: both;\\n      border-left: 1px solid lightgrey;\\n      padding-left: 10px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart-dashboard/chart-dashboard.component.scss\n// module id = ./src/app/chart-dashboard/chart-dashboard.component.scss\n// module chunks = main","import { Component, OnInit, Input, NgZone } from '@angular/core';\n\nimport { Universe, Chart, Filter, Data, Query } from '../data.models';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-chart-dashboard',\n  templateUrl: './chart-dashboard.component.html',\n  styleUrls: ['./chart-dashboard.component.scss']\n})\nexport class ChartDashboardComponent implements OnInit {\n\n  @Input() charts: Chart[] = [];\n  @Input() filters: Filter[] = [];\n\n  constructor(private ngZone: NgZone, private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  onClear(_filter?: Filter): Promise<void> {\n    const filters = _filter ? [_filter] : this.filters;\n    filters.forEach(filter => {\n      switch (filter.type) {\n        case 'value':\n          filter.range = [filter.minValue, filter.maxValue];\n          break;\n        default:\n          filter.rangeIndex = {};\n      }\n    });\n    return this.updateFilters();\n  }\n\n  onSelect(): Promise<void> {\n    return this.updateFilters();\n  }\n\n  /** Updates universe/crossfilter filters based on UI filters */\n  async updateFilters(): Promise<void> {\n    const p = this.filters.map(filter => {\n      switch (filter.type) {\n        case 'value':\n          const value = {\n            $gte: filter.range[0],\n            $lte: filter.range[1],\n          };\n          return this.dataService.dataUniverse.filter(filter.key, value, true, true);\n        default:\n          const range = Object.keys(filter.rangeIndex).reduce((acc, key) => {\n            if (filter.rangeIndex[key]) {\n              acc.push(parseInt(key, 10) || key);\n            }\n            return acc;\n          }, []);\n          return this.dataService.dataUniverse.filter(filter.key, range.length > 0 ? range : undefined, false, true);\n      }\n    });\n\n    await Promise.all(p);\n    return this.updateData();\n  }\n\n  /** Converts universe aggragate data into ngx-charts data */\n  private updateData(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.charts.forEach(chart => {\n        chart.data = this.dataService.getChartSeriesFromQuery(chart.xQuery, chart.dataDims[2], chart.dataDims[4]);\n      });\n    });\n    this.ngZone.run(() => { });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chart-dashboard/chart-dashboard.component.ts","module.exports = \"h1 {\\n  text-align: center;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart/chart.component.css\n// module id = ./src/app/chart/chart.component.css\n// module chunks = main","module.exports = \"\\n<h1>{{chart.title}}</h1>\\n\\n<ngx-charts-bar-vertical\\n  *ngIf=\\\"chartType.name === 'bar-vertical'\\\"\\n  class=\\\"chart-container\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-bar-vertical>\\n\\n<ngx-charts-pie-chart\\n  *ngIf=\\\"chartType.name === 'pie'\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [explodeSlices]=\\\"false\\\"\\n  [labels]=\\\"chart.showXAxisLabel\\\"\\n  [doughnut]=\\\"false\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-pie-chart>\\n\\n<ngx-charts-pie-grid\\n  *ngIf=\\\"chartType.name === 'pie-grid'\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-pie-grid>\\n\\n<ngx-charts-tree-map\\n  *ngIf=\\\"chartType.name === 'tree-map'\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  (select)=\\\"onSelect($event)\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\">\\n</ngx-charts-tree-map>\\n\\n<ngx-charts-number-card\\n  *ngIf=\\\"chartType.name === 'number-cards'\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-number-card>\\n\\n<ngx-charts-gauge\\n  *ngIf=\\\"chartType.name === 'guage'\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  [units]=\\\"chart.yAxisLabel\\\"\\n  (select)=\\\"onSelect($event)\\\">\\n</ngx-charts-gauge>\\n\\n<!-- ngx-charts-bar-vertical-2d\\n  *ngIf=\\\"chartType.name === 'bar-vertical-2d'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  xxxbarPadding=\\\"chart.barPadding\\\"\\n  xxxgroupPadding=\\\"chart.groupPadding\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-vertical-2d>\\n<ngx-charts-bar-horizontal-2d\\n  *ngIf=\\\"chartType.name === 'bar-horizontal-2d'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-horizontal-2d>\\n<ngx-charts-bar-vertical-stacked\\n  *ngIf=\\\"chartType.name === 'bar-vertical-stacked'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-vertical-stacked>\\n<ngx-charts-bar-horizontal-stacked\\n  *ngIf=\\\"chartType.name === 'bar-horizontal-stacked'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-horizontal-stacked>\\n<ngx-charts-bar-vertical-normalized\\n  *ngIf=\\\"chartType.name === 'bar-vertical-normalized'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-vertical-normalized>\\n<ngx-charts-bar-horizontal-normalized\\n  *ngIf=\\\"chartType.name === 'bar-horizontal-normalized'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\">\\n</ngx-charts-bar-horizontal-normalized>\\n<ngx-charts-polar-chart\\n  *ngIf=\\\"chartType.name === 'polar-chart'\\\"\\n  [view]=\\\"chart.view\\\"\\n  class=\\\"chart-container\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [autoScale]=\\\"chart.autoScale\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [rangeFillOpacity]=\\\"chart.rangeFillOpacity\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [curve]=\\\"chart.curveClosed\\\"\\n  [showSeriesOnHover]=\\\"chart.showSeriesOnHover\\\">\\n</ngx-charts-polar-chart>\\n<ngx-charts-line-chart\\n  *ngIf=\\\"chartType.name === 'line-chart'\\\"\\n  [view]=\\\"chart.view\\\"\\n  class=\\\"chart-container\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [results]=\\\"data\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [autoScale]=\\\"chart.autoScale\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [curve]=\\\"chart.curve\\\"\\n  [rangeFillOpacity]=\\\"chart.rangeFillOpacity\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [showSeriesOnHover]=\\\"chart.showSeriesOnHover\\\">\\n</ngx-charts-line-chart>\\n<ngx-charts-heat-map\\n  *ngIf=\\\"chartType.name === 'heat-map'\\\"\\n  class=\\\"chart-container\\\"\\n  [view]=\\\"chart.view\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [results]=\\\"data\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [gradient]=\\\"chart.gradient\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  xxxinnerPadding=\\\"chart.innerPadding\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\">\\n</ngx-charts-heat-map>\\n<ngx-charts-bubble-chart\\n  *ngIf=\\\"chartType.name === 'bubble-chart'\\\"\\n  [view]=\\\"chart.view\\\"\\n  class=\\\"chart-container\\\"\\n  [results]=\\\"data\\\"\\n  [showGridLines]=\\\"chart.showGridLines\\\"\\n  [legend]=\\\"chart.showLegend\\\"\\n  [legendTitle]=\\\"chart.legendTitle\\\"\\n  [xAxis]=\\\"chart.showXAxis\\\"\\n  [yAxis]=\\\"chart.showYAxis\\\"\\n  [showXAxisLabel]=\\\"chart.showXAxisLabel\\\"\\n  [showYAxisLabel]=\\\"chart.showYAxisLabel\\\"\\n  [xAxisLabel]=\\\"chart.xAxisLabel\\\"\\n  [yAxisLabel]=\\\"chart.yAxisLabel\\\"\\n  [autoScale]=\\\"chart.autoScale\\\"\\n  [scheme]=\\\"chart.colorScheme\\\"\\n  [schemeType]=\\\"chart.schemeType\\\"\\n  [roundDomains]=\\\"chart.roundDomains\\\"\\n  [tooltipDisabled]=\\\"chart.tooltipDisabled\\\"\\n  [minRadius]=\\\"3\\\"\\n  [maxRadius]=\\\"20\\\">\\n</ngx-charts-bubble-chart -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chart/chart.component.html\n// module id = ./src/app/chart/chart.component.html\n// module chunks = main","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\nimport { Universe, Chart, Filter, Data, Query } from '../data.models';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n  @Output() select: EventEmitter<{chart: Chart, value: any}> = new EventEmitter();\n\n  @Input() chart: Chart;\n  @Input() chartType: any;\n  @Input() data: Data[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onSelect(data: Data) {\n    const value = typeof data === 'object' ? data.name : data;\n    if (this.chart.xFilter) {\n      const filter = this.chart.xFilter;\n      switch (filter.type) {\n        case 'value':\n          filter.range[0] = value;\n          break;\n        default:\n          filter.rangeIndex[value] = !filter.rangeIndex[value];\n      }\n    }\n    this.select.emit({chart: this.chart, value});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chart/chart.component.ts","function createChartType({title, ...obj}) {\n  return {\n    title,\n    name: titleToName(title),\n    dimLabels: ['Group by', 'Name', 'Value', null],\n    ...obj\n  };\n\n  function titleToName(s: string) {\n    return s.toLowerCase().replace(/\\ /g, '-');\n  }\n}\n\nexport const chartTypes = [\n  createChartType({ title: 'Bar Vertical', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n  createChartType({ title: 'Pie', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n  createChartType({ title: 'Tree Map', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n  createChartType({ title: 'Number Cards', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n  createChartType({ title: 'Guage', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n  createChartType({ title: 'Pie Grid', dimLabels: ['Group by', null, 'Value', null, 'Aggregation']}),\n\n  // createChartType({ title: 'Bar Vertical 2D', dimLabels: ['Group by', 'Name', 'Value', null, 'Aggregation']})\n\n  /*\n  createChartType({ title: 'Bar Horizontal 2D' }),\n  createChartType({ title: 'Bar Vertical Stacked' }),\n  createChartType({ title: 'Bar Vertical Normalized' }),\n  createChartType({ title: 'Bar Horizontal Normalized' }),\n  createChartType({ title: 'Polar Chart', dimLabels: ['Group by', 'Angle Values', 'Radius Values', null] }),\n  createChartType({ title: 'Line Chart', dimLabels: ['Group by', 'x-Values', 'y-Values', null] }),\n  createChartType({ title: 'Heat Map', dimLabels: ['x-Category', 'y-Category', 'Color', null] }),\n  createChartType({ title: 'Bubble Chart', dimLabels: ['GroupBy', 'x-Values', 'y-Values', 'Radius'] }) */\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chartTypes.ts","import { Injectable, EventEmitter } from '@angular/core';\nimport * as universe from 'universe';\nimport * as babyparse from 'babyparse';\n\nimport { Universe, Chart, Filter, Data, Query } from './data.models';\n\n@Injectable()\nexport class DataService {\n\n  private _dataText: string;\n  private _parsed: {data: Data[], errors: any[], meta: any};\n\n  universeUpdated: EventEmitter<Universe> = new EventEmitter();\n\n  dataDims: string[] = [];\n\n  dataUniverse: Universe;\n\n  get rawData(): Data[] {\n    return this._parsed.data;\n  }\n\n  get errors(): any[] {\n    return this._parsed.errors;\n  }\n\n  get dataText(): string {\n    return this._dataText || ' ';\n  }\n\n  get headerValues(): string[] {\n    return this._parsed.meta.fields.map(d => ({\n      name: d,\n      type: typeof this._parsed.data[0][d]\n    }));\n  }\n\n  constructor() { }\n\n  async updateData(dataText: string): Promise<Data[]> {\n    this._parsed = babyparse.parse(dataText, {\n      header: true,\n      dynamicTyping: true\n    });\n\n    if (this._parsed.errors.length) {\n      this._dataText = '';\n      return this.rawData;\n    }\n\n    this.dataUniverse = await universe(this._parsed.data);\n\n    this.universeUpdated.emit(this.dataUniverse);\n    return this.rawData;\n  }\n\n  async createQuery(groupBy: string, valueKey: string, aggragate = 'sum'): Promise<Query> {\n    let select: any = { $count: true };\n    aggragate = '$' + aggragate;\n\n    if (valueKey && valueKey !== 'count') {\n      select = {\n        $count: true,\n        [valueKey]: {\n          [aggragate]: valueKey\n        }\n      };\n    }\n\n    return await this.dataUniverse.query({\n      groupBy,\n      select\n    });\n  }\n\n  getChartSeriesFromQuery(query: Query, yKey: string = 'count', aggragate = 'sum'): Data[] {\n    return query.data.map(d => {\n      let value =  d.value[yKey];\n      if (typeof value === 'object') {\n        value = value[aggragate];\n      }\n      return {\n        name: d.key,\n        value: value\n      };\n    }).filter(d => d.value !== 0);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.service.ts","export const gapminder = `\ncountry\tyear\tgdpPercap\tlifeExp\tpop\tcontinent\nAustralia\t1952\t10039.59564\t69.12\t8691212\tOceania\nAustralia\t1957\t10949.64959\t70.33\t9712569\tOceania\nAustralia\t1962\t12217.22686\t70.93\t10794968\tOceania\nAustralia\t1967\t14526.12465\t71.1\t11872264\tOceania\nAustralia\t1972\t16788.62948\t71.93\t13177000\tOceania\nAustralia\t1977\t18334.19751\t73.49\t14074100\tOceania\nAustralia\t1982\t19477.00928\t74.74\t15184200\tOceania\nAustralia\t1987\t21888.88903\t76.32\t16257249\tOceania\nAustralia\t1992\t23424.76683\t77.56\t17481977\tOceania\nAustralia\t1997\t26997.93657\t78.83\t18565243\tOceania\nAustralia\t2002\t30687.75473\t80.37\t19546792\tOceania\nAustralia\t2007\t34435.36744\t81.235\t20434176\tOceania\nCanada\t1952\t11367.16112\t68.75\t14785584\tAmericas\nCanada\t1957\t12489.95006\t69.96\t17010154\tAmericas\nCanada\t1962\t13462.48555\t71.3\t18985849\tAmericas\nCanada\t1967\t16076.58803\t72.13\t20819767\tAmericas\nCanada\t1972\t18970.57086\t72.88\t22284500\tAmericas\nCanada\t1977\t22090.88306\t74.21\t23796400\tAmericas\nCanada\t1982\t22898.79214\t75.76\t25201900\tAmericas\nCanada\t1987\t26626.51503\t76.86\t26549700\tAmericas\nCanada\t1992\t26342.88426\t77.95\t28523502\tAmericas\nCanada\t1997\t28954.92589\t78.61\t30305843\tAmericas\nCanada\t2002\t33328.96507\t79.77\t31902268\tAmericas\nCanada\t2007\t36319.23501\t80.653\t33390141\tAmericas\nChina\t1952\t400.4486107\t44\t556263528\tAsia\nChina\t1957\t575.9870009\t50.54896\t637408000\tAsia\nChina\t1962\t487.6740183\t44.50136\t665770000\tAsia\nChina\t1967\t612.7056934\t58.38112\t754550000\tAsia\nChina\t1972\t676.9000921\t63.11888\t862030000\tAsia\nChina\t1977\t741.2374699\t63.96736\t943455000\tAsia\nChina\t1982\t962.4213805\t65.525\t1000281000\tAsia\nChina\t1987\t1378.904018\t67.274\t1084035000\tAsia\nChina\t1992\t1655.784158\t68.69\t1164970000\tAsia\nChina\t1997\t2289.234136\t70.426\t1230075000\tAsia\nChina\t2002\t3119.280896\t72.028\t1280400000\tAsia\nChina\t2007\t4959.114854\t72.961\t1318683096\tAsia\nFrance\t1952\t7029.809327\t67.41\t42459667\tEurope\nFrance\t1957\t8662.834898\t68.93\t44310863\tEurope\nFrance\t1962\t10560.48553\t70.51\t47124000\tEurope\nFrance\t1967\t12999.91766\t71.55\t49569000\tEurope\nFrance\t1972\t16107.19171\t72.38\t51732000\tEurope\nFrance\t1977\t18292.63514\t73.83\t53165019\tEurope\nFrance\t1982\t20293.89746\t74.89\t54433565\tEurope\nFrance\t1987\t22066.44214\t76.34\t55630100\tEurope\nFrance\t1992\t24703.79615\t77.46\t57374179\tEurope\nFrance\t1997\t25889.78487\t78.64\t58623428\tEurope\nFrance\t2002\t28926.03234\t79.59\t59925035\tEurope\nFrance\t2007\t30470.0167\t80.657\t61083916\tEurope\nGermany\t1952\t7144.114393\t67.5\t69145952\tEurope\nGermany\t1957\t10187.82665\t69.1\t71019069\tEurope\nGermany\t1962\t12902.46291\t70.3\t73739117\tEurope\nGermany\t1967\t14745.62561\t70.8\t76368453\tEurope\nGermany\t1972\t18016.18027\t71\t78717088\tEurope\nGermany\t1977\t20512.92123\t72.5\t78160773\tEurope\nGermany\t1982\t22031.53274\t73.8\t78335266\tEurope\nGermany\t1987\t24639.18566\t74.847\t77718298\tEurope\nGermany\t1992\t26505.30317\t76.07\t80597764\tEurope\nGermany\t1997\t27788.88416\t77.34\t82011073\tEurope\nGermany\t2002\t30035.80198\t78.67\t82350671\tEurope\nGermany\t2007\t32170.37442\t79.406\t82400996\tEurope\nJapan\t1952\t3216.956347\t63.03\t86459025\tAsia\nJapan\t1957\t4317.694365\t65.5\t91563009\tAsia\nJapan\t1962\t6576.649461\t68.73\t95831757\tAsia\nJapan\t1967\t9847.788607\t71.43\t100825279\tAsia\nJapan\t1972\t14778.78636\t73.42\t107188273\tAsia\nJapan\t1977\t16610.37701\t75.38\t113872473\tAsia\nJapan\t1982\t19384.10571\t77.11\t118454974\tAsia\nJapan\t1987\t22375.94189\t78.67\t122091325\tAsia\nJapan\t1992\t26824.89511\t79.36\t124329269\tAsia\nJapan\t1997\t28816.58499\t80.69\t125956499\tAsia\nJapan\t2002\t28604.5919\t82\t127065841\tAsia\nJapan\t2007\t31656.06806\t82.603\t127467972\tAsia\nMexico\t1952\t3478.125529\t50.789\t30144317\tAmericas\nMexico\t1957\t4131.546641\t55.19\t35015548\tAmericas\nMexico\t1962\t4581.609385\t58.299\t41121485\tAmericas\nMexico\t1967\t5754.733883\t60.11\t47995559\tAmericas\nMexico\t1972\t6809.40669\t62.361\t55984294\tAmericas\nMexico\t1977\t7674.929108\t65.032\t63759976\tAmericas\nMexico\t1982\t9611.147541\t67.405\t71640904\tAmericas\nMexico\t1987\t8688.156003\t69.498\t80122492\tAmericas\nMexico\t1992\t9472.384295\t71.455\t88111030\tAmericas\nMexico\t1997\t9767.29753\t73.67\t95895146\tAmericas\nMexico\t2002\t10742.44053\t74.902\t102479927\tAmericas\nMexico\t2007\t11977.57496\t76.195\t108700891\tAmericas\nSpain\t1952\t3834.034742\t64.94\t28549870\tEurope\nSpain\t1957\t4564.80241\t66.66\t29841614\tEurope\nSpain\t1962\t5693.843879\t69.69\t31158061\tEurope\nSpain\t1967\t7993.512294\t71.44\t32850275\tEurope\nSpain\t1972\t10638.75131\t73.06\t34513161\tEurope\nSpain\t1977\t13236.92117\t74.39\t36439000\tEurope\nSpain\t1982\t13926.16997\t76.3\t37983310\tEurope\nSpain\t1987\t15764.98313\t76.9\t38880702\tEurope\nSpain\t1992\t18603.06452\t77.57\t39549438\tEurope\nSpain\t1997\t20445.29896\t78.77\t39855442\tEurope\nSpain\t2002\t24835.47166\t79.78\t40152517\tEurope\nSpain\t2007\t28821.0637\t80.941\t40448191\tEurope\nUnited Kingdom\t1952\t9979.508487\t69.18\t50430000\tEurope\nUnited Kingdom\t1957\t11283.17795\t70.42\t51430000\tEurope\nUnited Kingdom\t1962\t12477.17707\t70.76\t53292000\tEurope\nUnited Kingdom\t1967\t14142.85089\t71.36\t54959000\tEurope\nUnited Kingdom\t1972\t15895.11641\t72.01\t56079000\tEurope\nUnited Kingdom\t1977\t17428.74846\t72.76\t56179000\tEurope\nUnited Kingdom\t1982\t18232.42452\t74.04\t56339704\tEurope\nUnited Kingdom\t1987\t21664.78767\t75.007\t56981620\tEurope\nUnited Kingdom\t1992\t22705.09254\t76.42\t57866349\tEurope\nUnited Kingdom\t1997\t26074.53136\t77.218\t58808266\tEurope\nUnited Kingdom\t2002\t29478.99919\t78.471\t59912431\tEurope\nUnited Kingdom\t2007\t33203.26128\t79.425\t60776238\tEurope\nUnited States\t1952\t13990.48208\t68.44\t157553000\tAmericas\nUnited States\t1957\t14847.12712\t69.49\t171984000\tAmericas\nUnited States\t1962\t16173.14586\t70.21\t186538000\tAmericas\nUnited States\t1967\t19530.36557\t70.76\t198712000\tAmericas\nUnited States\t1972\t21806.03594\t71.34\t209896000\tAmericas\nUnited States\t1977\t24072.63213\t73.38\t220239000\tAmericas\nUnited States\t1982\t25009.55914\t74.65\t232187835\tAmericas\nUnited States\t1987\t29884.35041\t75.02\t242803533\tAmericas\nUnited States\t1992\t32003.93224\t76.09\t256894189\tAmericas\nUnited States\t1997\t35767.43303\t76.81\t272911760\tAmericas\nUnited States\t2002\t39097.09955\t77.31\t287675526\tAmericas\nUnited States\t2007\t42951.65309\t78.242\t301139947\tAmericas`.trim();\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.ts","export function toCapitalizedWords(name) {\n  const words = name.match(/[A-Za-z][a-z]*/g);\n  return words.map(capitalize).join(' ');\n\n  function capitalize(word) {\n    return word.charAt(0).toUpperCase() + word.substring(1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/utils.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}